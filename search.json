[{"path":"https://schuch666.github.io/eva3dm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Schuch. Author, maintainer.","code":""},{"path":"https://schuch666.github.io/eva3dm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schuch D (2024). eva3dm: Evaluation 3D Meteorological Air Quality Models. R package version 0.5.6, https://schuch666.github.io/eva3dm/.","code":"@Manual{,   title = {eva3dm: Evaluation of 3D Meteorological and Air Quality Models},   author = {Daniel Schuch},   year = {2024},   note = {R package version 0.5.6},   url = {https://schuch666.github.io/eva3dm/}, }"},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"eva3dm-","dir":"","previous_headings":"","what":"Evaluation of 3D Meteorological and Air Quality Models","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"R-package focusing EVAluation 3D weather air quality Models. following workflow recommended: - Pre-processing observations: download (METAR can downloded using R-package riem Iowa State University site, Air Quality data Brazil can downloaded using R-package qualR, QUALAR MonitorAir sites), QA observation data, process observation data evaluation, process site-list plan extract time-series model; range satellite products available NASA giovanni website; - Pre-processing model output: extraction pre-processing model outputs; - Model Evaluation: eva() (evaluate time-series) sat() (evaluate satellite products), available perform statistical (details stat()) categorical (details cate()) evaluation; - Visualization: try visualization functions package packages. package include:","code":""},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"model-post-processing-functions","dir":"","previous_headings":"","what":"Model Post-processing functions:","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"✔ extract_serie() extract save time-series WRF outputs input files (compatible NetCDF files); ✔ extract_mean() extract, average (max, min, etc) save variables NetCDF file; ✔ extract_max_8h() extract, calculate maximum (avarage, max, min) 8h average save variables NetCDF file; ✔ wrf_rast() extract variables create SpatRaster SpatVector WRF files (compatible NetCDF files) contrapart rast_to_netcdf() converts rast array compatible NetCDF WRF file;","code":""},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"data-pre-processing-functions","dir":"","previous_headings":"","what":"Data pre-processing functions:","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"✔ mda8(), ma8h(), hourly(), daily() process calculate calculate time-series; ✔ rh2q(), q2rh(), convert humidity units.","code":""},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"model-evaluation-functions","dir":"","previous_headings":"","what":"Model evaluation functions:","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"✔ eva() data pairing evaluation time-series; ✔ sat() evaluation satellite image; ✔ stat() calculate statistical metrics (integrated eva() sat()); ✔ cate() calculate categorical metrics (integrated eva() sat()); ✔ %% allows fair evaluation function-call level eva() sat(); ✔ write_stat() read_stat() write read evaluation results eva() sat().","code":""},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"visualization-and-utility-functions","dir":"","previous_headings":"","what":"Visualization and Utility functions:","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"✔ ncdump() print ncdump -h equivalent command NetCDF file; ✔ vars() return name variables NetCDF file; ✔ atr() read write attributes Netcdf file; ✔ interp() Interpolation (project resample); ✔ plot_rast() custom plot terra SpatRaster objects; ✔ plot_diff() custom plot absolute relative difference terra SpatRaster objects; ✔ overlay() custom plot overlay points plot point-data,%% can used georeference evaluation results; ✔ legend_range() custom legend, display max, min average;","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/atr.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write attributes on a NetCDF file — atr","title":"Read and write attributes on a NetCDF file — atr","text":"Read write metadata information NetCDF files","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/atr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write attributes on a NetCDF file — atr","text":"","code":"atr(file = NA, var = \"?\", att = NA, action = \"na\", value = NA, verbose = T)"},{"path":"https://schuch666.github.io/eva3dm/reference/atr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write attributes on a NetCDF file — atr","text":"file file name var variable name, 0 global \"?\" show options att attribute names (NA get attnames) action \"na\" (print), \"write\" \"get\" (return value) attribute value value write verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/atr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and write attributes on a NetCDF file — atr","text":"","code":"nc <- paste0(system.file(\"extdata\",package=\"eva3dm\"),'/wrfinput_d01') atr(nc,0) #> global attributes: #> TITLE START_DATE SIMULATION_START_DATE WEST-EAST_GRID_DIMENSION SOUTH-NORTH_GRID_DIMENSION BOTTOM-TOP_GRID_DIMENSION DX DY GRIDTYPE DIFF_OPT KM_OPT DAMP_OPT DAMPCOEF KHDIF KVDIF MP_PHYSICS RA_LW_PHYSICS RA_SW_PHYSICS SF_SFCLAY_PHYSICS SF_SURFACE_PHYSICS BL_PBL_PHYSICS CU_PHYSICS SF_LAKE_PHYSICS SURFACE_INPUT_SOURCE SST_UPDATE GRID_FDDA GFDDA_INTERVAL_M GFDDA_END_H GRID_SFDDA SGFDDA_INTERVAL_M SGFDDA_END_H HYPSOMETRIC_OPT USE_THETA_M USE_MAXW_LEVEL USE_TROP_LEVEL GWD_OPT SF_URBAN_PHYSICS SF_OCEAN_PHYSICS SIMULATION_INITIALIZATION_TYPE WEST-EAST_PATCH_START_UNSTAG WEST-EAST_PATCH_END_UNSTAG WEST-EAST_PATCH_START_STAG WEST-EAST_PATCH_END_STAG SOUTH-NORTH_PATCH_START_UNSTAG SOUTH-NORTH_PATCH_END_UNSTAG SOUTH-NORTH_PATCH_START_STAG SOUTH-NORTH_PATCH_END_STAG BOTTOM-TOP_PATCH_START_UNSTAG BOTTOM-TOP_PATCH_END_UNSTAG BOTTOM-TOP_PATCH_START_STAG BOTTOM-TOP_PATCH_END_STAG GRID_ID PARENT_ID I_PARENT_START J_PARENT_START PARENT_GRID_RATIO DT CEN_LAT CEN_LON TRUELAT1 TRUELAT2 MOAD_CEN_LAT STAND_LON POLE_LAT POLE_LON GMT JULYR JULDAY MAP_PROJ MAP_PROJ_CHAR MMINLU NUM_LAND_CAT ISWATER ISLAKE ISICE ISURBAN ISOILWATER HYBRID_OPT ETAC atr(nc,'Times') #> variable Times attritutes: #> not found atr(nc,'XLAT') #> variable XLAT attritutes: #> MemoryOrder description units stagger FieldType atr(nc,'XLONG') #> variable XLONG attritutes: #> MemoryOrder description units stagger FieldType  atr(nc,'XLONG','MemoryOrder') #> XLONG attribute MemoryOrder: #> XY atr(nc,'XLONG','description') #> XLONG attribute description: #> LONGITUDE, WEST IS NEGATIVE atr(nc,'XLONG','units') #> XLONG attribute units: #> degree east atr(nc,'XLONG','stagger') #> XLONG attribute stagger: #> empty atr(nc,'XLONG','FieldType') #> XLONG attribute FieldType: #> 104"},{"path":"https://schuch666.github.io/eva3dm/reference/cate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate categorical statistics in related to a threshold — cate","title":"Calculate categorical statistics in related to a threshold — cate","text":"Calculate traditional statistics two numerical vectors related threshold","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/cate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate categorical statistics in related to a threshold — cate","text":"","code":"cate(   model,   observation,   threshold,   cutoff = NA,   nobs = 8,   rname,   to.plot = F,   col = \"#4444bb\",   pch = 19,   lty = 3,   lcol = \"#333333\",   lim,   verbose = T,   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/cate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate categorical statistics in related to a threshold — cate","text":"model numeric vector paired model data observation numeric vector paired observation data threshold reference value cutoff (optionally maximum) valid value observation nobs minimum number observations rname row name .plot TRUE plot scatter-plot col color points pch pch points lty lty threshold lines lcol col threshold lines lim limit x y verbose display additional information ... arguments passed plot","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/cate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate categorical statistics in related to a threshold — cate","text":"data.frame including: Accuracy (); Critical Success Index (CSI); Probability Detection (POD); Bias(B); False Alarm Ratio (FAR); Heidke Skill Score (HSS); Pearce skill Score (PSS) ","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/cate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate categorical statistics in related to a threshold — cate","text":"Yu, S., Mathur, R., Schere, K., Kang, D., Pleim, J., Young, J., ... & Rao, S. T. (2008). Evaluation real‐time PM2. 5 forecasts process analysis PM2. 5 formation eastern United States using Eta‐CMAQ forecast model 2004 ICARTT study. Journal Geophysical Research: Atmospheres, 113(D6).","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/cate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate categorical statistics in related to a threshold — cate","text":"","code":"model <- 0.02 * 1:100 data  <- abs(rnorm(100,0.01)) cate(model = model, observation = data, threshold = 1,      to.plot = TRUE, rname = 'example')  #>           n       Obs  Sim thr  A      CSI      POD        B FAR HSS      PSS #> example 100 0.7929618 1.01   1 53 27.69231 54.54545 151.5152  64   6 6.784261"},{"path":"https://schuch666.github.io/eva3dm/reference/daily.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate daily mean, min or max — daily","title":"Calculate daily mean, min or max — daily","text":"function calculate Ozone Maximum Daily 8-hr Average 8-hr moving Average data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/daily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate daily mean, min or max — daily","text":"","code":"daily(   data,   time = \"date\",   var,   stat = mean,   min_offset = 0,   hour_offset = 0,   numerical = TRUE,   verbose = TRUE )"},{"path":"https://schuch666.github.io/eva3dm/reference/daily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate daily mean, min or max — daily","text":"data data.frame time column variable columns processed time name time column (default date) POSIXct var name columns calculated stat function statistics calculate (default mean) min_offset minutes observation previous hour (default 0) hour_offset hours observation previous day (default 0) numerical TRUE (defoult) include numerical columns verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/daily.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate daily mean, min or max — daily","text":"data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/daily.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate daily mean, min or max — daily","text":"","code":"sites <- c(\"OAKB\") for(site in sites){ cat('downloading METAR from:',site,'...\\n') DATA <- riem::riem_measures(station    = sites,                             date_start = \"2012-01-01\",                             date_end   = \"2012-02-01\") } #> downloading METAR from: OAKB ... data_daily_mean <- daily(DATA,time = 'valid') #> processing daily statistcis ...  data_daily_min  <- daily(DATA[1:7],time = 'valid',stat = min) #> processing daily statistcis ...  data_daily_max  <- daily(DATA[1:7],time = 'valid',stat = max) #> processing daily statistcis ..."},{"path":"https://schuch666.github.io/eva3dm/reference/eva.html","id":null,"dir":"Reference","previous_headings":"","what":"Model statistical evaluation — eva","title":"Model statistical evaluation — eva","text":"Statistical (categorical) evaluation 2 data.frames. input data.frames (model observation) must contain \"date\" column (containing POSIXlt). function perform simple case tests perform time pairing observations model data can calculate statistical evaluation categorical evaluation.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/eva.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model statistical evaluation — eva","text":"","code":"eva(   mo,   ob,   rname = site,   table = NULL,   site = \"ALL\",   wd = FALSE,   fair = NULL,   cutoff = NA,   cutoff_NME = NA,   no_tz = FALSE,   nobs = 8,   eval_function = stat,   time = \"date\",   verbose = TRUE,   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/eva.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model statistical evaluation — eva","text":"mo data.frame model data ob data.frame observation data rname row name output (default site argument) table data.frame append results site name stations \"\" (default), see notes wd default FALSE, see notes fair model data.frame (list names) perform fair comparison, see notes cutoff minimum (optionally maximum) valid value observation cutoff_NME minimum (optionally maximum) valid value observation NME no_tz ignore tz input (force GMT) nobs minimum number valid observations, default 8 eval_function evaluation function (default stat) time name time column (containing time POSIXct) verbose display additional information ... arguments passing stats plot","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/eva.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Model statistical evaluation — eva","text":"fair can data.frame character string used analysis, alternatively function wind direction rotation 360 (-360) applied minimize wind direction difference. site == '' (default) columns observations combined one column (observation) columns evaluated together. Special thanks Kiarash Libo help test wind direction option.","code":""},{"path":[]},{"path":"https://schuch666.github.io/eva3dm/reference/eva.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model statistical evaluation — eva","text":"","code":"model <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),                         \"/model.Rds\")) obs   <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),                         \"/obs.Rds\"))  # if there is no observed data # the function return an empty row table <- eva(mo = model, ob = obs, site = \"VVIbes\") #> VVIbes has only 0 valid observations (lesser than 8 obs) print(table) #>        n Obs Sim  r IOA FA2 RMSE MB ME NMB (%) NME (%) #> VVIbes 0  NA  NA NA  NA  NA   NA NA NA      NA      NA  # if the site are not in the input data frame a message is displayed # and the function return an empty row table <- eva(mo = model, ob = obs, site = \"Ibirapuera\") #> Ibirapuera not found in observation input print(table) #>            n Obs Sim  r IOA FA2 RMSE MB ME NMB (%) NME (%) #> Ibirapuera 0  NA  NA NA  NA  NA   NA NA NA      NA      NA  # calculating statistical with a few observed values table <- eva(mo = model, ob = obs, site = \"Americana\") #> Americana has 227 valid observations print(table) #>             n      Obs      Sim         r       IOA       FA2     RMSE #> Americana 227 40.92952 18.18197 0.6492022 0.5934335 0.4229075 32.47269 #>                  MB       ME   NMB (%)  NME (%) #> Americana -22.74754 24.10165 -55.57735 58.88575  # calculating categorical (using 2 for threshold) with a few observed values table <- eva(mo = model, ob = obs, site = \"Americana\",              eval_function = cate, threshold = 2) #> Americana has 227 valid observations print(table) #>             n      Obs      Sim thr        A      CSI      POD        B #> Americana 227 40.92952 18.18197   2 93.39207 93.36283 97.23502 101.3825 #>                FAR     HSS      PSS #> Americana 4.090909 8.44313 7.235023  # calculating categorical (using 2 for threshold) with a few observed values table <- eva(mo = model, ob = obs, site = \"Americana\",              eval_function = cate, threshold = 10) #> Americana has 227 valid observations print(table) #>             n      Obs      Sim thr        A      CSI      POD        B   FAR #> Americana 227 40.92952 18.18197  10 74.00881 71.90476 75.12438 79.60199 5.625 #>                HSS      PSS #> Americana 24.01997 40.50899"},{"path":"https://schuch666.github.io/eva3dm/reference/eva3dm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"eva3dm: Evaluation of 3D Meteorological and Air Quality Models — eva3dm-package","title":"eva3dm: Evaluation of 3D Meteorological and Air Quality Models — eva3dm-package","text":"Functions post-process, visualize evaluate results 3d Meteorological Air Quality models surface satellite observations.","code":""},{"path":[]},{"path":"https://schuch666.github.io/eva3dm/reference/eva3dm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"eva3dm: Evaluation of 3D Meteorological and Air Quality Models — eva3dm-package","text":"Maintainer: Daniel Schuch underschuch@gmail.com (ORCID)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_max_8h.html","id":null,"dir":"Reference","previous_headings":"","what":"Creata a NetCDF file with the surface maximum of O3 — extract_max_8h","title":"Creata a NetCDF file with the surface maximum of O3 — extract_max_8h","text":"Read values o3 T2, convert o3 ug m-3 calculate maximum 8-hour moving avarage list files.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_max_8h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creata a NetCDF file with the surface maximum of O3 — extract_max_8h","text":"","code":"extract_max_8h(   filelist,   variable = \"o3\",   field = \"4d\",   prefix = \"max_8h\",   units = \"ug m-3\",   meta = T,   filename,   verbose = TRUE )"},{"path":"https://schuch666.github.io/eva3dm/reference/extract_max_8h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creata a NetCDF file with the surface maximum of O3 — extract_max_8h","text":"filelist list files read variable variable name field '4d' (default), '3d', '2d' '2dz' see notes prefix output file, defolt serie units units netcdf file (default ug m-3), change skip unit conversion meta use Times, XLONG XLAT data (work 2d variable file) filename name file, case prefix used verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_max_8h.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Creata a NetCDF file with the surface maximum of O3 — extract_max_8h","text":"field argument '4d' / '2dz' used read 4d/3d variable droping 3rd dimention (z).","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_max_8h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creata a NetCDF file with the surface maximum of O3 — extract_max_8h","text":"","code":"dir.create(file.path(tempdir(), \"MDA8\")) folder <- system.file(\"extdata\",package=\"eva3dm\") wrf_file <- paste0(folder,\"/test_small_o3.nc\") extract_max_8h(filelist = wrf_file,                prefix = paste0(file.path(tempdir(),\"MDA8\"),'/mean'),                field = '3d') #> extracting 8h max of o3 field 3d units: ug m-3  #> reading: /home/runner/work/_temp/Library/eva3dm/extdata/test_small_o3.nc file 1 of 1  #> min: 2.010639e-13 mean: 23.42075 max: 99.85495  #> total times: 24  #> output: /tmp/RtmpQmMuc6/MDA8/mean.o3.nc"},{"path":"https://schuch666.github.io/eva3dm/reference/extract_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Creata a NetCDF file with the surface mean — extract_mean","title":"Creata a NetCDF file with the surface mean — extract_mean","text":"Read calculate mean value variable list wrf output files.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creata a NetCDF file with the surface mean — extract_mean","text":"","code":"extract_mean(   filelist,   variable = \"o3\",   field = \"4d\",   prefix = \"mean\",   units = \"ppmv\",   meta = T,   filename,   verbose = TRUE )"},{"path":"https://schuch666.github.io/eva3dm/reference/extract_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creata a NetCDF file with the surface mean — extract_mean","text":"filelist list files read variable variable name field '4d' (default), '3d', '2d' '2dz' see notes prefix output file, defolt serie units units netcdf file (default ppmv) meta use Times, XLONG XLAT data (work 2d variable file) filename name file, case prefix used verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_mean.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Creata a NetCDF file with the surface mean — extract_mean","text":"field argument '4d' / '2dz' used read 4d/3d variable droping 3rd dimention (z).","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creata a NetCDF file with the surface mean — extract_mean","text":"","code":"dir.create(file.path(tempdir(), \"MEAN\")) folder <- system.file(\"extdata\",package=\"eva3dm\") wrf_file <- paste0(folder,\"/wrf.day1.o3.nc\") extract_mean(filelist = wrf_file,prefix = paste0(file.path(tempdir(),\"MEAN\"),'/mean')) #> extracting mean of o3 field 4d  #> reading: /home/runner/work/_temp/Library/eva3dm/extdata/wrf.day1.o3.nc file 1 of 1  #> min: 2.123069e-05 mean: 0.007767247 max: 0.03175572  #> total times: 1  #> output: /tmp/RtmpQmMuc6/MEAN/mean.o3.nc"},{"path":"https://schuch666.github.io/eva3dm/reference/extract_serie.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract time series of wrf file list of lat/lon — extract_serie","title":"Extract time series of wrf file list of lat/lon — extract_serie","text":"Read extract data list wrf output files table lat/lon points based distance points center model grid points, points outside domain (points domain boundary) extracteds.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_serie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract time series of wrf file list of lat/lon — extract_serie","text":"","code":"extract_serie(   filelist,   point,   variable = \"o3\",   field = \"4d\",   prefix = \"serie\",   new = \"check\",   return.nearest = FALSE,   fast = FALSE,   use_ij = FALSE,   latitude = \"XLAT\",   longitude = \"XLONG\",   use_TFLAG = FALSE,   use_datesec = FALSE,   id = \"id\",   verbose = TRUE )"},{"path":"https://schuch666.github.io/eva3dm/reference/extract_serie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract time series of wrf file list of lat/lon — extract_serie","text":"filelist list files read point data.frame lat/lon variable variable name field '4d' (defoult), '3d', '2d' '2dz' see notes prefix output file, defolt serie new TRUE, FALSE 'check' see notes return.nearest return data.frame nearest points instead extract serie fast faster calculation grid distances less precise use_ij logical, use j input instead calculate latitude name latitude coordinade variable netcdf longitude name longitude coordinade variable netcdf use_TFLAG use variable TFLAG (CMAQ / smoke) instead Times (WRF) use_datesec use variable date datesec (WACCM / CAM-Chem) instead Times (WRF) id name column station names, point SpatVector (points) terra package verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_serie.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract time series of wrf file list of lat/lon — extract_serie","text":"field argument '4d' '2dz' used read 4d/3d variable droping 3rd dimention (z). new = TRUE create new file, new = FALSE append data old file, new = 'check' check file exist append file exist create file doesnt exist CAMx time-series, use options: use_TFLAG=T, latitude='latitude', longitude='longitude', new=T WACCM time-series, use options: use_datesec=T, latitude='lat', longitude='lon', new=T","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_serie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract time series of wrf file list of lat/lon — extract_serie","text":"","code":"cat('Example 1: INMET stations for 2015\\n') #> Example 1: INMET stations for 2015 stations <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/BR-inmet_2015.Rds\"))  cat('Example 2: METAR stations of Brazil\\n') #> Example 2: METAR stations of Brazil stations <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/BR-metar.Rds\"))  cat('Example 3: METAR soundings over Brazil\\n') #> Example 3: METAR soundings over Brazil stations <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/BR-soundings.Rds\"))  cat('Example 4: Global AERONET sites\\n') #> Example 4: Global AERONET sites stations <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/Global-aeronet.Rds\"))  cat('Example 5: Brazilian Air Quality: CETESB (SP), RAMQAr (ES) and SMAC (RJ)\\n') #> Example 5: Brazilian Air Quality: CETESB (SP), RAMQAr (ES) and SMAC (RJ) stations <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/BR-AQ.Rds\"))  files    <- dir(path = system.file(\"extdata\",package=\"eva3dm\"),                 pattern = 'wrf.day',                 full.names = TRUE) dir.create(file.path(tempdir(),\"SERIE\")) folder <- file.path(tempdir(),\"SERIE\")  # extract data for 3 locations extract_serie(filelist = files, point = stations[1:3,],prefix = paste0(folder,'/serie')) #> extracting series of o3 field 4d for 3 points #> dim of lat/lon: 125 125  #> used dim of lat/lon: 125 125  #> calculating distances... #>                 lat       lon source  i  j model_lat model_lon #> Americana -22.72500 -47.34800 CETESB 82 37 -22.79819 -47.40500 #> Campinas  -22.94673 -47.11928 CETESB 83 37 -22.78904 -47.05811 #> Congonhas -23.61632 -46.66347 CETESB 84 34 -23.73756 -46.67905 #> reading o3 : /home/runner/work/_temp/Library/eva3dm/extdata/wrf.day1.o3.nc file 1 of 3  #> reading o3 : /home/runner/work/_temp/Library/eva3dm/extdata/wrf.day2.o3.nc file 2 of 3  #> reading o3 : /home/runner/work/_temp/Library/eva3dm/extdata/wrf.day3.o3.nc file 3 of 3  #> output: /tmp/RtmpQmMuc6/SERIE/serie.o3.Rds"},{"path":"https://schuch666.github.io/eva3dm/reference/get_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the distance in kilometers between two points — get_distances","title":"Get the distance in kilometers between two points — get_distances","text":"Get distance kilometers two points","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/get_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the distance in kilometers between two points — get_distances","text":"","code":"get_distances(lat1, long1, lat2, long2, R = 6371)"},{"path":"https://schuch666.github.io/eva3dm/reference/get_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the distance in kilometers between two points — get_distances","text":"lat1 Latitude decimals long1 Longitude decimals lat2 Latitude decimals long2 Longitude decimals R Radius earth kmdescription (R=6371)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/get_distances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the distance in kilometers between two points — get_distances","text":"numeric vector distance kilometers. #' source: https://github.com/gustavobio/brclimate/blob/master/R/get_distances.R","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-IN-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the common columns — %IN%","title":"Returns the common columns — %IN%","text":"results 'd01 d02' style syntax","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-IN-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the common columns — %IN%","text":"","code":"x %IN% y"},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-IN-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the common columns — %IN%","text":"x data.frame y data.frame character string","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-IN-grapes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Returns the common columns — %IN%","text":"message always displayed keep easy track debug issues (results evaluation process). can used crop rast objects, arguments sat() function","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-IN-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the common columns — %IN%","text":"","code":"times <- seq(as.POSIXct('2024-01-01',tz = 'UTC'),              as.POSIXct('2024-01-02',tz = 'UTC'),              by = 'hour') randon_stuff <- rnorm(25,10)  observation <- data.frame(date   = times,                           site_1 = randon_stuff,                           site_3 = randon_stuff,                           site_4 = randon_stuff,                           site_5 = randon_stuff,                           site_6 = randon_stuff,                           site_7 = randon_stuff)  model_d01 <- data.frame(date  = times,                         site_1=randon_stuff+1,                         site_2=randon_stuff+2,                         site_3=randon_stuff+3,                         site_4=randon_stuff+4)  model_d02 <- data.frame(date  = times,                         site_1=randon_stuff-1,                         site_3=randon_stuff-3)  # multiline model_d01_in_d02 <- model_d01 %IN% model_d02 #> using model_d01 in model_d02  eva(mo = model_d01_in_d02, ob = observation, rname = 'd01 in d02') #> combining all sites... #> site_1  site_3  ... #> ALL has 50 valid observations #>             n      Obs      Sim         r       IOA FA2     RMSE MB ME  NMB (%) #> d01 in d02 50 10.00081 12.00081 0.7107345 0.5350831   1 2.236068  2  2 19.99839 #>             NME (%) #> d01 in d02 19.99839  # or single line eva(mo = model_d01 %IN% model_d02, ob = observation, rname = 'd01 in d02') #> using model_d01 in model_d02  #> combining all sites... #> site_1  site_3  ... #> ALL has 50 valid observations #>             n      Obs      Sim         r       IOA FA2     RMSE MB ME  NMB (%) #> d01 in d02 50 10.00081 12.00081 0.7107345 0.5350831   1 2.236068  2  2 19.99839 #>             NME (%) #> d01 in d02 19.99839 # or eva(mo = model_d01, ob = observation %IN% model_d02, rname = 'd01 in d02') #> using observation in model_d02  #> combining all sites... #> site_1  site_3  ... #> ALL has 50 valid observations #>             n      Obs      Sim         r       IOA FA2     RMSE MB ME  NMB (%) #> d01 in d02 50 10.00081 12.00081 0.7107345 0.5350831   1 2.236068  2  2 19.99839 #>             NME (%) #> d01 in d02 19.99839"},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-at-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine stats and site list to overlay plot — %at%","title":"Combine stats and site list to overlay plot — %at%","text":"combines stats (individual station evaluation) site list SpatVector using row.names","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-at-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine stats and site list to overlay plot — %at%","text":"","code":"stat %at% site"},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-at-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine stats and site list to overlay plot — %at%","text":"stat data.frame stats variable (containing row.names variables) site data.frame site list (containing row.names, lat lon)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-at-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine stats and site list to overlay plot — %at%","text":"","code":"sites<- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/BR-AQ.Rds\")) model<- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/model.Rds\")) obs  <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/obs.Rds\"))  stats <- eva(mo = model, ob = obs, site = 'Americana') #> Americana has 227 valid observations stats <- eva(mo = model, ob = obs, site = 'SAndre',table = stats) #> SAndre has 207 valid observations stats <- eva(mo = model, ob = obs, site = 'VVIbes',table = stats) #> VVIbes has only 0 valid observations (lesser than 8 obs)  print(stats) #>             n      Obs      Sim         r       IOA       FA2     RMSE #> Americana 227 40.92952 18.18197 0.6492022 0.5934335 0.4229075 32.47269 #> SAndre    207 60.62802 15.66744 0.6246762 0.4813952 0.1449275 59.21330 #> VVIbes      0       NA       NA        NA        NA        NA       NA #>                  MB       ME   NMB (%)  NME (%) #> Americana -22.74754 24.10165 -55.57735 58.88575 #> SAndre    -44.96058 45.64932 -74.15808 75.29409 #> VVIbes           NA       NA        NA       NA  geo_stats <- stats %at% sites #> georeferencing stats at sites   print(geo_stats) #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 3, 12  (geometries, attributes) #>  extent      : -47.348, -40.318, -23.643, -20.3435  (xmin, xmax, ymin, ymax) #>  coord. ref. :   #>  names       : source     n   Obs   Sim      r    IOA    FA2  RMSE     MB    ME #>  type        : <fact> <num> <num> <num>  <num>  <num>  <num> <num>  <num> <num> #>  values      : CETESB   227 40.93 18.18 0.6492 0.5934 0.4229 32.47 -22.75  24.1 #>                CETESB   207 60.63 15.67 0.6247 0.4814 0.1449 59.21 -44.96 45.65 #>                RAMQAr     0    NA    NA     NA     NA     NA    NA     NA    NA #>  NMB (%) NME (%) #>    <num>   <num> #>   -55.58   58.89 #>   -74.16   75.29 #>       NA      NA"},{"path":"https://schuch666.github.io/eva3dm/reference/hourly.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate hourly mean, min or max — hourly","title":"Calculate hourly mean, min or max — hourly","text":"function calculate Ozone Maximum Daily 8-hr Average 8-hr moving Average data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/hourly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate hourly mean, min or max — hourly","text":"","code":"hourly(   data,   time = \"date\",   var,   stat = mean,   min_offset = 30,   numerical = TRUE,   verbose = TRUE )"},{"path":"https://schuch666.github.io/eva3dm/reference/hourly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate hourly mean, min or max — hourly","text":"data data.frame time column variable columns processed time name time column (default date) POSIXct var name columns calculated stat function statistics calculate (default mean) min_offset minutes observation previous hour (default 30) numerical TRUE (default) include numerical columns verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/hourly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate hourly mean, min or max — hourly","text":"data.frame including numerical columns data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/hourly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate hourly mean, min or max — hourly","text":"","code":"sites <- c(\"OAHR\") for(site in sites){ cat('downloading METAR from:',site,'...\\n') DATA <- riem::riem_measures(station    = sites,                             date_start = \"2012-01-01\",                             date_end   = \"2012-02-01\") } #> downloading METAR from: OAHR ... data_hourly_mean <- hourly(DATA,time = 'valid') #> processing hourly data ...  data_hourly_min  <- hourly(DATA[1:7],time = 'valid',stat = min) #> processing hourly data ...  data_hourly_max  <- hourly(DATA[1:7],time = 'valid',stat = max) #> processing hourly data ..."},{"path":"https://schuch666.github.io/eva3dm/reference/interp.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolation (project and resample) — interp","title":"Interpolation (project and resample) — interp","text":"function project interpolate rast","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/interp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolation (project and resample) — interp","text":"","code":"interp(x, y, method = \"bilinear\", verbose = F)"},{"path":"https://schuch666.github.io/eva3dm/reference/interp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolation (project and resample) — interp","text":"x rast interpolated y target rast interpolation method passed terra::resample verbose display additional information (used)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/interp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolation (project and resample) — interp","text":"","code":"model_o3 <- terra::rast(paste0(system.file(\"extdata\",package=\"eva3dm\"),                               \"/camx_no2.Rds\")) omi_o3   <- terra::rast(paste0(system.file(\"extdata\",package=\"eva3dm\"),                               \"/omi_no2.Rds\"))  # interpolate omi O3 column to model grid omi_o3c_interp_model <- interp(omi_o3,model_o3)  # interpolate model o3 column to omi grid model_o3c_interp_omi <- interp(omi_o3,model_o3)"},{"path":"https://schuch666.github.io/eva3dm/reference/legend_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a legend with the range of values — legend_range","title":"Plot a legend with the range of values — legend_range","text":"Plot legend range values","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/legend_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a legend with the range of values — legend_range","text":"","code":"legend_range(   x,   y,   text.width = NULL,   dig = c(2, 2, 2),   xjust = 0.005,   yjust = 0.95,   horiz = TRUE,   y.intersp = 0.5,   x.intersp = 0.5,   show.mean = TRUE,   unit = \"\",   label_mean = \"ALL:\",   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/legend_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a legend with the range of values — legend_range","text":"x rast array y rast array mean (x used range case) text.width Longitude decimals dig vector number digits plot xjust passed legend yjust passed legend horiz passed legend y.intersp passed legend x.intersp passed legend show.mean set TRUE hide mean value unit string units label_mean label case y provided ... extra arguments passed legend","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/legend_range.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot a legend with the range of values — legend_range","text":"use rast use change projection text.width can vary depending map dimensions","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/legend_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a legend with the range of values — legend_range","text":"","code":"x <- 1:10 + rnorm(10,sd = .4) plot(x,ty='l') legend_range(x)"},{"path":"https://schuch666.github.io/eva3dm/reference/ma8h.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate 8-hour moving average — ma8h","title":"Calculate 8-hour moving average — ma8h","text":"function calculate Ozone 8-hour moving average data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/ma8h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate 8-hour moving average — ma8h","text":"","code":"ma8h(data, time = \"date\", var, verbose = TRUE, ...)"},{"path":"https://schuch666.github.io/eva3dm/reference/ma8h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate 8-hour moving average — ma8h","text":"data data.frame time column variable columns processed time name time column (default date) POSIXct var name columns calculated verbose display additional information ... parameters passed hourly","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/ma8h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate 8-hour moving average — ma8h","text":"data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/ma8h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate 8-hour moving average — ma8h","text":"","code":"model_file <- paste(system.file(\"extdata\", package = \"eva3dm\"),                                 \"/model_o3_ugm3_36km.Rds\", sep=\"\") model      <- readRDS(model_file) model_8h   <- ma8h(model) #> processing hourly data ...  #> processing 8-hour moving avarage ...  plot(model$date,model$Campinas, pch = 19,      main = expression(O[3]~~'['*mu*g*m^-3*']')) points(model_8h$date,model_8h$Campinas, col = 'blue', pch = 19) legend('topleft',bty = 'n',        pch = 19,        legend = c('hourly','8h-mov average'),        col = c('black','blue'))"},{"path":"https://schuch666.github.io/eva3dm/reference/mda8.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum Daily 8-hr Average — mda8","title":"Maximum Daily 8-hr Average — mda8","text":"function calculate Ozone Maximum Daily 8-hr Average 8-hr moving Average data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/mda8.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum Daily 8-hr Average — mda8","text":"","code":"mda8(data, time = \"date\", var, verbose = TRUE)"},{"path":"https://schuch666.github.io/eva3dm/reference/mda8.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum Daily 8-hr Average — mda8","text":"data data.frame time column variable columns processed time name time column (default date) POSIXct var name columns calculated verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/mda8.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum Daily 8-hr Average — mda8","text":"data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/mda8.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum Daily 8-hr Average — mda8","text":"","code":"model_file <- paste(system.file(\"extdata\", package = \"eva3dm\"),                     \"/model_o3_ugm3_36km.Rds\", sep=\"\") model      <- readRDS(model_file) model_mda8 <- mda8(model) #> processing hourly data ...  #> processing 8-hour moving avarage ...  #> processing daily maximum ...  model_8h   <- ma8h(model) #> processing hourly data ...  #> processing 8-hour moving avarage ...  plot(model$date,model$Campinas, pch = 19,      main = expression(O[3]~~'['*mu*g*m^-3*']')) points(model_8h$date,model_8h$Campinas, col = 'blue', pch = 19) points(model_mda8$date + 17*60*60,model_mda8$Campinas,        col = 'red', pch = 4, cex = 2) legend('topleft',bty = 'n',        pch = c(19,19,4),        legend = c('hourly','8h-mov average','MD8A'),        col = c('black','blue','red'))"},{"path":"https://schuch666.github.io/eva3dm/reference/ncdump.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a 'ncdum -h' command — ncdump","title":"Print a 'ncdum -h' command — ncdump","text":"Read NetCDF print medatada","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/ncdump.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a 'ncdum -h' command — ncdump","text":"","code":"ncdump(file = file.choose())"},{"path":"https://schuch666.github.io/eva3dm/reference/ncdump.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a 'ncdum -h' command — ncdump","text":"file file name","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/ncdump.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a 'ncdum -h' command — ncdump","text":"","code":"ncdump(file = paste0(system.file(\"extdata\",package=\"eva3dm\"),                      '/wrfinput_d01')) #> File /home/runner/work/_temp/Library/eva3dm/extdata/wrfinput_d01 (NC_FORMAT_CLASSIC): #>  #>      3 variables (excluding dimension variables): #>         char Times[DateStrLen,Time]    #>         float XLAT[west_east,south_north]    #>             MemoryOrder: XY #>             description: LATITUDE, SOUTH IS NEGATIVE #>             units: degree north #>             stagger:  #>             FieldType: 104 #>         float XLONG[west_east,south_north]    #>             MemoryOrder: XY #>             description: LONGITUDE, WEST IS NEGATIVE #>             units: degree east #>             stagger:  #>             FieldType: 104 #>  #>      4 dimensions: #>         DateStrLen  Size:19  #>         Time  Size:1   *** is unlimited ***  #>         west_east  Size:149  #>         south_north  Size:99  #>  #>     79 global attributes: #>         TITLE:  OUTPUT FROM REAL_EM V3.9.1.1 PREPROCESSOR #>         START_DATE: 2011-08-01_00:00:00 #>         SIMULATION_START_DATE: 2011-08-01_00:00:00 #>         WEST-EAST_GRID_DIMENSION: 150 #>         SOUTH-NORTH_GRID_DIMENSION: 100 #>         BOTTOM-TOP_GRID_DIMENSION: 35 #>         DX: 9000 #>         DY: 9000 #>         GRIDTYPE: C #>         DIFF_OPT: 1 #>         KM_OPT: 4 #>         DAMP_OPT: 3 #>         DAMPCOEF: 0.200000002980232 #>         KHDIF: 0 #>         KVDIF: 0 #>         MP_PHYSICS: 10 #>         RA_LW_PHYSICS: 4 #>         RA_SW_PHYSICS: 4 #>         SF_SFCLAY_PHYSICS: 1 #>         SF_SURFACE_PHYSICS: 2 #>         BL_PBL_PHYSICS: 1 #>         CU_PHYSICS: 11 #>         SF_LAKE_PHYSICS: 0 #>         SURFACE_INPUT_SOURCE: 1 #>         SST_UPDATE: 0 #>         GRID_FDDA: 0 #>         GFDDA_INTERVAL_M: 0 #>         GFDDA_END_H: 0 #>         GRID_SFDDA: 0 #>         SGFDDA_INTERVAL_M: 0 #>         SGFDDA_END_H: 0 #>         HYPSOMETRIC_OPT: 2 #>         USE_THETA_M: 0 #>         USE_MAXW_LEVEL: 0 #>         USE_TROP_LEVEL: 0 #>         GWD_OPT: 0 #>         SF_URBAN_PHYSICS: 1 #>         SF_OCEAN_PHYSICS: 0 #>         SIMULATION_INITIALIZATION_TYPE: REAL-DATA CASE #>         WEST-EAST_PATCH_START_UNSTAG: 1 #>         WEST-EAST_PATCH_END_UNSTAG: 149 #>         WEST-EAST_PATCH_START_STAG: 1 #>         WEST-EAST_PATCH_END_STAG: 150 #>         SOUTH-NORTH_PATCH_START_UNSTAG: 1 #>         SOUTH-NORTH_PATCH_END_UNSTAG: 99 #>         SOUTH-NORTH_PATCH_START_STAG: 1 #>         SOUTH-NORTH_PATCH_END_STAG: 100 #>         BOTTOM-TOP_PATCH_START_UNSTAG: 1 #>         BOTTOM-TOP_PATCH_END_UNSTAG: 34 #>         BOTTOM-TOP_PATCH_START_STAG: 1 #>         BOTTOM-TOP_PATCH_END_STAG: 35 #>         GRID_ID: 1 #>         PARENT_ID: 1 #>         I_PARENT_START: 1 #>         J_PARENT_START: 1 #>         PARENT_GRID_RATIO: 1 #>         DT: 45 #>         CEN_LAT: -23.5499954223633 #>         CEN_LON: -45 #>         TRUELAT1: -23 #>         TRUELAT2: -24 #>         MOAD_CEN_LAT: -23.5499954223633 #>         STAND_LON: -45 #>         POLE_LAT: 90 #>         POLE_LON: 0 #>         GMT: 0 #>         JULYR: 2011 #>         JULDAY: 213 #>         MAP_PROJ: 1 #>         MAP_PROJ_CHAR: Lambert Conformal #>         MMINLU: MODIFIED_IGBP_MODIS_NOAH #>         NUM_LAND_CAT: 21 #>         ISWATER: 17 #>         ISLAKE: 21 #>         ISICE: 15 #>         ISURBAN: 13 #>         ISOILWATER: 14 #>         HYBRID_OPT: -1 #>         ETAC: 0"},{"path":"https://schuch666.github.io/eva3dm/reference/overlay.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot or add points using a color scale — overlay","title":"Plot or add points using a color scale — overlay","text":"Custon plot SpatRaster (terra R-package) object based terra package","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/overlay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot or add points using a color scale — overlay","text":"","code":"overlay(   p,   z,   col,   lim = range(z, na.rm = TRUE),   symmetry = TRUE,   pch = 19,   cex = 1,   outside = TRUE,   add = TRUE,   plg = list(tic = \"none\", shrink = 1),   pax = list(),   expand = 1.15,   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/overlay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot or add points using a color scale — overlay","text":"p SpatVector points z values plot col color lim range values scale symmetry calculate symmetrical scale pch type point cex character expansion points outside include values outside range add add existing plot plg list parameters passed terra::add_legend pax list parameters passed graphics::axis expand expand plot region ... arguments passing terra::plot","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/overlay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot or add points using a color scale — overlay","text":"","code":"sp<- terra::vect(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/masp.shp\")) BR<- terra::vect(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/BR.shp\"))  p    <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/BR-AQ.Rds\")) p$id      <- row.names(p) point     <- terra::vect(p) point$NMB <- 1:45 - 20 # some values to plot  terra::plot(BR, main = 'add points',xlim = c(-52,-37),ylim = c(-25,-18)) terra::lines(BR) terra::lines(sp, col = 'gray') overlay(point,point$NMB,cex = 1.4)   overlay(point,point$NMB,cex = 1.4, add = FALSE, main = 'new plot') terra::lines(BR) terra::lines(sp, col = 'gray')"},{"path":"https://schuch666.github.io/eva3dm/reference/plot_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the difference from two rast (SpatRaster) object — plot_diff","title":"Plot the difference from two rast (SpatRaster) object — plot_diff","text":"Custon difference plots (x - y) plot SpatRaster (terra R-package) object based terra package","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/plot_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the difference from two rast (SpatRaster) object — plot_diff","text":"","code":"plot_diff(   x,   y,   col,   absolute = T,   relative = T,   lim_1 = NA,   lim_2 = NA,   units = c(\"\", expression(\"%\")),   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/plot_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the difference from two rast (SpatRaster) object — plot_diff","text":"x SpatVector points y values plot col color absolute plot absolute difference relative plot relative difference lim_1 range values scale lim_2 calculate symmetrical scale units units annotation ... arguments passing plot_raster","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/plot_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the difference from two rast (SpatRaster) object — plot_diff","text":"","code":"folder <- system.file(\"extdata\",package=\"eva3dm\") wrf    <- paste0(folder,\"/wrfinput_d01\") A      <- wrf_rast(wrf,'XLAT') B      <- wrf_rast(wrf,'XLONG') plot_diff(A,B,int = 2)"},{"path":"https://schuch666.github.io/eva3dm/reference/plot_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot rast (SpatRaster) object — plot_rast","title":"Plot rast (SpatRaster) object — plot_rast","text":"Custon plot SpatRaster (terra R-package) object based terra package","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/plot_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot rast (SpatRaster) object — plot_rast","text":"","code":"plot_rast(   r,   color,   ncolor = 21,   proj = FALSE,   plg = list(tic = \"none\", shrink = 0.98),   pax = list(),   latitude = TRUE,   longitude = TRUE,   int = 10,   grid = TRUE,   grid_int = int,   grid_col = \"#666666\",   add_range = TRUE,   ndig = 2,   log = FALSE,   range,   min = -3,   max,   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/plot_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot rast (SpatRaster) object — plot_rast","text":"r raster color color scale, name custom color scale (see notes) ncolor number colors proj TRUE project raster lat-lon plg list parameters passed terra::add_legend pax list parameters passed graphics::axis latitude add latitude axis longitude add longitude axis int interval latitude longitude lines grid add grid (graticule style) grid_int interval grid lines grid_col color grid lines add_range add legend max, average min r values ndig number digits legend_range log TRUE plot log-scale range range plot min minimum log scale (defoul -3) max maximum log scale ... arguments passing terra::plot","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/plot_rast.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot rast (SpatRaster) object — plot_rast","text":"color scale includes: 'eva3r' (default), 'eva4', 'blues' 'diff'","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/plot_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot rast (SpatRaster) object — plot_rast","text":"","code":"wrf <- paste(system.file(\"extdata\", package = \"eva3dm\"),                          \"/wrfinput_d01\", sep=\"\")  r <- wrf_rast(file=wrf, name='XLAT')  plot_rast(r)"},{"path":"https://schuch666.github.io/eva3dm/reference/q2rh.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert absolute humidity to relative humidity — q2rh","title":"Convert absolute humidity to relative humidity — q2rh","text":"function convert absolute humidity relative humidity.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/q2rh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert absolute humidity to relative humidity — q2rh","text":"","code":"q2rh(q, t = 288.15, p = 101325)"},{"path":"https://schuch666.github.io/eva3dm/reference/q2rh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert absolute humidity to relative humidity — q2rh","text":"q vector (data.frame) relative humidity (g/Kg) t vector (data.frame) temperature (K) p vector (data.frame) pressure (Pa)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/q2rh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert absolute humidity to relative humidity — q2rh","text":"values data.frame, units ","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/q2rh.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert absolute humidity to relative humidity — q2rh","text":"default values standard atmosphere (288.15 K / 101325 Pa) rh temp arguments data.frame, need number lines columns, first column (time column) ignored.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/q2rh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert absolute humidity to relative humidity — q2rh","text":"","code":"# for a single value (or same length vectors) q2rh(q = 0.0002038, t = 302.45, p = 100800) #> [1] 80.76917  # using all data.frames times <- seq(as.POSIXct('2024-01-01',tz = 'UTC'),              as.POSIXct('2024-01-02',tz = 'UTC'),              by = 'hour')[1:5] q2   <- data.frame(time = times, a = rep(0.0002038,5)) temp <- data.frame(time = times, a = rep(   302.45,5)) pres <- data.frame(time = times, a = rep(   100800,5)) q2rh(q = q2, t = temp, p = pres) #>                  time        a #> 1 2024-01-01 00:00:00 80.76917 #> 2 2024-01-01 01:00:00 80.76917 #> 3 2024-01-01 02:00:00 80.76917 #> 4 2024-01-01 03:00:00 80.76917 #> 5 2024-01-01 04:00:00 80.76917  # using data.frame for q and t (p is cte.) q2rh(q = q2, t = temp, p = 100000) #>                  time        a #> 1 2024-01-01 00:00:00 80.12815 #> 2 2024-01-01 01:00:00 80.12815 #> 3 2024-01-01 02:00:00 80.12815 #> 4 2024-01-01 03:00:00 80.12815 #> 5 2024-01-01 04:00:00 80.12815  # using data.frame for q and p (t is cte.) q2rh(q = q2, t = 300, p = pres) #>                  time        a #> 1 2024-01-01 00:00:00 93.16934 #> 2 2024-01-01 01:00:00 93.16934 #> 3 2024-01-01 02:00:00 93.16934 #> 4 2024-01-01 03:00:00 93.16934 #> 5 2024-01-01 04:00:00 93.16934  # using data.frame only for q (p and t are cte.) q2rh(q = q2, t = 300, p = 100000) #>                  time       a #> 1 2024-01-01 00:00:00 92.4299 #> 2 2024-01-01 01:00:00 92.4299 #> 3 2024-01-01 02:00:00 92.4299 #> 4 2024-01-01 03:00:00 92.4299 #> 5 2024-01-01 04:00:00 92.4299"},{"path":"https://schuch666.github.io/eva3dm/reference/rast_to_netcdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to convert/save a SpatRaster array/Netcdf — rast_to_netcdf","title":"Function to convert/save a SpatRaster array/Netcdf — rast_to_netcdf","text":"Conversion SpatRaster array opcionally save Netcdf File.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rast_to_netcdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to convert/save a SpatRaster array/Netcdf — rast_to_netcdf","text":"","code":"rast_to_netcdf(r, file, name, verbose = TRUE)"},{"path":"https://schuch666.github.io/eva3dm/reference/rast_to_netcdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to convert/save a SpatRaster array/Netcdf — rast_to_netcdf","text":"r SpatRaster object file Netcdf file name name variable name Netcdf file verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rast_to_netcdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to convert/save a SpatRaster array/Netcdf — rast_to_netcdf","text":"","code":"folder   <- system.file(\"extdata\",package=\"eva3dm\") wrf_file <- paste0(folder,\"/wrf.day1.o3.nc\")  Rast     <- wrf_rast(wrf_file,'o3') A        <- rast_to_netcdf(Rast)"},{"path":"https://schuch666.github.io/eva3dm/reference/read_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to read stats and evaluation — read_stat","title":"Function to read stats and evaluation — read_stat","text":"Function read stats evaluation output","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/read_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to read stats and evaluation — read_stat","text":"","code":"read_stat(file, sep = \";\", dec = \".\", verbose = FALSE, ...)"},{"path":"https://schuch666.github.io/eva3dm/reference/read_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to read stats and evaluation — read_stat","text":"file model data.frame sep field separator string, passed read.table function dec string use decimal points, passed read.table function verbose display additional information ... arguments passed read.table functions","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/read_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to read stats and evaluation — read_stat","text":"","code":"sample <- read_stat(file    = paste0(system.file(\"extdata\", package = \"eva3dm\"),\"/sample.txt\"),                     verbose = TRUE) #> reading /home/runner/work/_temp/Library/eva3dm/extdata/sample.txt   sample <- read_stat(file    = paste0(system.file(\"extdata\", package = \"eva3dm\"),\"/sample.csv\"),                     verbose = TRUE) #> reading /home/runner/work/_temp/Library/eva3dm/extdata/sample.csv"},{"path":"https://schuch666.github.io/eva3dm/reference/rh2q.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert relative humidity to absolute humidity — rh2q","title":"Convert relative humidity to absolute humidity — rh2q","text":"function convert humidity absolute humidity using Tetens formula, assuming standard atmosphere conditions.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rh2q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert relative humidity to absolute humidity — rh2q","text":"","code":"rh2q(rh, temp = 15)"},{"path":"https://schuch666.github.io/eva3dm/reference/rh2q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert relative humidity to absolute humidity — rh2q","text":"rh vector (data.frame) relative humidity (percentage) temp vector (data.frame) temperature (Celsius)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rh2q.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert relative humidity to absolute humidity — rh2q","text":"value data.frame, units g/g.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rh2q.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert relative humidity to absolute humidity — rh2q","text":"default values standard atmosphere (288.15 K) rh temp arguments data.frame, need number lines columns, first column (time column) ignored.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rh2q.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert relative humidity to absolute humidity — rh2q","text":"","code":"# for a singfle value rh2q(rh = 99, temp = 25) #> [1] 0.0202236  # vector of rh values rh2q(rh = c(0,seq(1,100, by = 4)), temp = 25) #>  [1] 0.0000000000 0.0002042788 0.0010213938 0.0018385089 0.0026556240 #>  [6] 0.0034727390 0.0042898541 0.0051069692 0.0059240843 0.0067411993 #> [11] 0.0075583144 0.0083754295 0.0091925445 0.0100096596 0.0108267747 #> [16] 0.0116438897 0.0124610048 0.0132781199 0.0140952350 0.0149123500 #> [21] 0.0157294651 0.0165465802 0.0173636952 0.0181808103 0.0189979254 #> [26] 0.0198150404  # vector of values for rh and temp rh2q(rh = c(0,seq(1,100, by = 4)), temp = 10:35) #>  [1] 0.000000e+00 8.348345e-05 4.462669e-04 8.583979e-04 1.324373e-03 #>  [6] 1.849004e-03 2.437438e-03 3.095175e-03 3.828085e-03 4.642429e-03 #> [11] 5.544880e-03 6.542546e-03 7.642986e-03 8.854241e-03 1.018485e-02 #> [16] 1.164389e-02 1.324097e-02 1.498631e-02 1.689070e-02 1.896560e-02 #> [21] 2.122310e-02 2.367603e-02 2.633791e-02 2.922304e-02 3.234651e-02 #> [26] 3.572424e-02  # rh is data.frame and temp is a value times <- seq(as.POSIXct('2024-01-01',tz = 'UTC'),              as.POSIXct('2024-01-02',tz = 'UTC'),              by = 'hour') rh2q(rh   = data.frame(time = times, a = seq(1,100, by = 4)),temp = 25) #>                   time            a #> 1  2024-01-01 00:00:00 0.0002042788 #> 2  2024-01-01 01:00:00 0.0010213938 #> 3  2024-01-01 02:00:00 0.0018385089 #> 4  2024-01-01 03:00:00 0.0026556240 #> 5  2024-01-01 04:00:00 0.0034727390 #> 6  2024-01-01 05:00:00 0.0042898541 #> 7  2024-01-01 06:00:00 0.0051069692 #> 8  2024-01-01 07:00:00 0.0059240843 #> 9  2024-01-01 08:00:00 0.0067411993 #> 10 2024-01-01 09:00:00 0.0075583144 #> 11 2024-01-01 10:00:00 0.0083754295 #> 12 2024-01-01 11:00:00 0.0091925445 #> 13 2024-01-01 12:00:00 0.0100096596 #> 14 2024-01-01 13:00:00 0.0108267747 #> 15 2024-01-01 14:00:00 0.0116438897 #> 16 2024-01-01 15:00:00 0.0124610048 #> 17 2024-01-01 16:00:00 0.0132781199 #> 18 2024-01-01 17:00:00 0.0140952350 #> 19 2024-01-01 18:00:00 0.0149123500 #> 20 2024-01-01 19:00:00 0.0157294651 #> 21 2024-01-01 20:00:00 0.0165465802 #> 22 2024-01-01 21:00:00 0.0173636952 #> 23 2024-01-01 22:00:00 0.0181808103 #> 24 2024-01-01 23:00:00 0.0189979254 #> 25 2024-01-02 00:00:00 0.0198150404  # using both rh and temp are data.frames rh2q(rh   = data.frame(time = times, a = seq(1,100, by = 4)),      temp = data.frame(time = times, a = 11:35)) #>                   time            a #> 1  2024-01-01 00:00:00 8.348345e-05 #> 2  2024-01-01 01:00:00 4.462669e-04 #> 3  2024-01-01 02:00:00 8.583979e-04 #> 4  2024-01-01 03:00:00 1.324373e-03 #> 5  2024-01-01 04:00:00 1.849004e-03 #> 6  2024-01-01 05:00:00 2.437438e-03 #> 7  2024-01-01 06:00:00 3.095175e-03 #> 8  2024-01-01 07:00:00 3.828085e-03 #> 9  2024-01-01 08:00:00 4.642429e-03 #> 10 2024-01-01 09:00:00 5.544880e-03 #> 11 2024-01-01 10:00:00 6.542546e-03 #> 12 2024-01-01 11:00:00 7.642986e-03 #> 13 2024-01-01 12:00:00 8.854241e-03 #> 14 2024-01-01 13:00:00 1.018485e-02 #> 15 2024-01-01 14:00:00 1.164389e-02 #> 16 2024-01-01 15:00:00 1.324097e-02 #> 17 2024-01-01 16:00:00 1.498631e-02 #> 18 2024-01-01 17:00:00 1.689070e-02 #> 19 2024-01-01 18:00:00 1.896560e-02 #> 20 2024-01-01 19:00:00 2.122310e-02 #> 21 2024-01-01 20:00:00 2.367603e-02 #> 22 2024-01-01 21:00:00 2.633791e-02 #> 23 2024-01-01 22:00:00 2.922304e-02 #> 24 2024-01-01 23:00:00 3.234651e-02 #> 25 2024-01-02 00:00:00 3.572424e-02"},{"path":"https://schuch666.github.io/eva3dm/reference/sat.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to model evaluation using satellite — sat","title":"Functions to model evaluation using satellite — sat","text":"functions evaluate spatial performance using satellite","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/sat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to model evaluation using satellite — sat","text":"","code":"sat(   mo,   ob,   rname,   table = NULL,   n = 6,   min = NA,   max = NA,   method = \"bilinear\",   eval_function = stat,   verbose = T,   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/sat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to model evaluation using satellite — sat","text":"mo SpatRaster raster model ob SpatRaster raster observations rname passed stat table data.frame append results n number points boundary removed, default 5 min minimum value cutoff max maximum value cutoff method passed terra::resample eval_function evaluation function (default stat) verbose set TRUE display additional information ... arguments passed stat","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/sat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to model evaluation using satellite — sat","text":"data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/sat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Functions to model evaluation using satellite — sat","text":"DIED error message appears, means removing valid values using arguments min max. cate() used eval_function, argument threshold must included (see example).","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/sat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to model evaluation using satellite — sat","text":"","code":"model_o3 <- terra::rast(paste0(system.file(\"extdata\",package=\"eva3dm\"),                               \"/camx_no2.Rds\")) omi_o3   <- terra::rast(paste0(system.file(\"extdata\",package=\"eva3dm\"),                               \"/omi_no2.Rds\"))  # generate the statistical indexes sat(mo = model_o3,ob = omi_o3,rname = 'NO2_statistical') #> removing 6 points for the model (y) boundaryes ... #> interpolating obs. (x) to model grid (y)... #>                     n      Obs      Sim         r       IOA       FA2    RMSE #> NO2_statistical 11664 3.334283 4.267475 0.4689121 0.3358893 0.6685528 4.98183 #>                        MB       ME  NMB (%)  NME (%) #> NO2_statistical 0.9331919 2.165081 27.98778 64.93393  # generate categorical evaluation using 3.0 as threshold sat(mo = model_o3,ob = omi_o3,rname = 'NO2_categorical',     eval_function = cate, threshold = 3.0) #> removing 6 points for the model (y) boundaryes ... #> interpolating obs. (x) to model grid (y)... #>                     n      Obs      Sim thr        A      CSI      POD        B #> NO2_categorical 11664 3.334283 4.267475   3 83.04184 69.81074 85.49533 107.9626 #>                      FAR      HSS      PSS #> NO2_categorical 20.81025 66.05674 66.45827"},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate evaluation statistics from numerical vectors — stat","title":"Calculate evaluation statistics from numerical vectors — stat","text":"Calculate statistical indexes (Number pairs, observation average, model average, correlation, Index Agreement, Factor 2, Root Mean Square Error, Mean Bias, Mean error, Normalized Mean Bias, Normalized Mean Bias) model evaluation","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate evaluation statistics from numerical vectors — stat","text":"","code":"stat(   model,   observation,   wd = FALSE,   cutoff = NA,   cutoff_NME = NA,   nobs = 8,   rname,   verbose = T )"},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate evaluation statistics from numerical vectors — stat","text":"model numeric vector paired model data observation numeric vector paired observation data wd logical, set true apply rotation wind direction, see notes cutoff (optionally maximum) valid value observation cutoff_NME (optionally maximum) valid value observation NME, MFB MFE nobs minimum number observations rname row name verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate evaluation statistics from numerical vectors — stat","text":"data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate evaluation statistics from numerical vectors — stat","text":"option wd = TRUE apply rotation 360 model wind direction minimize angular difference.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate evaluation statistics from numerical vectors — stat","text":"Emery, C. Tai., E. 2001. Enhanced Meteorological Modeling Performance Evaluation Two Texas Ozone Episodes. Monk, K. et al. 2019. Evaluation Regional Air Quality Models Sydney Australia: Part 1—Meteorological Model Comparison. Atmosphere 10(7), p. 374. doi: 10.3390/atmos10070374. Ramboll. 2018. PacWest Newport Meteorological Performance Evaluation. Zhang, Y. et al. 2019. Multiscale Applications Two Online-Coupled Meteorology-Chemistry Models Recent Field Campaigns Australia, Part : Model Description WRF/Chem-ROMS Evaluation Using Surface Satellite Data Sensitivity Spatial Grid Resolutions. Atmosphere 10(4), p. 189. doi: 10.3390/atmos10040189. Emery, C., Liu, Z., Russell, .G., Odman, M.T., Yarwood, G. Kumar, N. 2017. Recommendations statistics benchmarks assess photochemical model performance. Journal Air & Waste Management Association 67(5), pp. 582–598. doi: 10.1080/10962247.2016.1265027. Zhai, H., Huang, L., Emery, C., Zhang, X., Wang, Y., Yarwood, G., ... & Li, L. (2024). Recommendations benchmarks photochemical air quality model applications China—NO2, SO2, CO PM10. Atmospheric Environment, 319, 120290.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate evaluation statistics from numerical vectors — stat","text":"","code":"model <- 1:100 data  <- model + rnorm(100,0.2) stat(model = model, observation = data) #>     n      Obs  Sim         r       IOA FA2     RMSE         MB        ME #> 1 100 50.77282 50.5 0.9993365 0.9996443   1 1.087395 -0.2728172 0.8912942 #>      NMB (%)  NME (%) #> 1 -0.5373293 1.755455"},{"path":"https://schuch666.github.io/eva3dm/reference/vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to return variable names — vars","title":"Function to return variable names — vars","text":"Return variable names NetCDF","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to return variable names — vars","text":"","code":"vars(file = NA, action = \"get\", verbose = F)"},{"path":"https://schuch666.github.io/eva3dm/reference/vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to return variable names — vars","text":"file file name action 'get' return variable names 'print' print verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to return variable names — vars","text":"","code":"vars(paste0(system.file(\"extdata\",package=\"eva3dm\"),'/wrfinput_d01')) #> [1] \"Times\" \"XLAT\"  \"XLONG\""},{"path":"https://schuch666.github.io/eva3dm/reference/wrf_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates SpatRaster object from wrf file — wrf_rast","title":"Creates SpatRaster object from wrf file — wrf_rast","text":"Creates SpatRaster (terra R-package) object variable wrf file (another compatible NetCDF)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/wrf_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates SpatRaster object from wrf file — wrf_rast","text":"","code":"wrf_rast(   file = file.choose(),   name = NA,   map,   level = 1,   latlon = FALSE,   method = \"bilinear\",   as_polygons = FALSE,   flip_h = FALSE,   flip_v = FALSE,   verbose = FALSE,   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/wrf_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates SpatRaster object from wrf file — wrf_rast","text":"file wrf file name variable name map (optional) file lat-lon variables grid information level 4d data, default 1 (surface) latlon logical (default FALSE), set TRUE project output \"+proj=longlat +datum=WGS84 +no_defs\" method method passed terra::projection, default bilinear as_polygons logical, true return SpatVector instead SpatRaster flip_h horizontal flip (rows) flip_v vertical flip (cols) verbose display additional information ... extra arguments passed ncdf4::ncvar_get","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/wrf_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates SpatRaster object from wrf file — wrf_rast","text":"","code":"{  wrf <- paste(system.file(\"extdata\", package = \"eva3dm\"),                          \"/wrfinput_d01\", sep=\"\")  r <- wrf_rast(file=wrf, name='XLAT')  plot_rast(r) }"},{"path":"https://schuch666.github.io/eva3dm/reference/write_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to write stats and evaluation — write_stat","title":"Functions to write stats and evaluation — write_stat","text":"Functions write stats evaluation output. file name ending .csv provided function save using write.csv otherwise function write.table.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/write_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to write stats and evaluation — write_stat","text":"","code":"write_stat(stat, file, sep = \";\", dec = \".\", verbose = FALSE, ...)"},{"path":"https://schuch666.github.io/eva3dm/reference/write_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to write stats and evaluation — write_stat","text":"stat observed data.frame file model data.frame sep field separator string, passed write.table function dec string use decimal points, passed write.table function verbose display additional information ... arguments passed write.table write.csv functions","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/write_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to write stats and evaluation — write_stat","text":"","code":"sample <- read_stat(paste0(system.file(\"extdata\", package = \"eva3dm\"),\"/sample.csv\"),                     verbose = TRUE) #> reading /home/runner/work/_temp/Library/eva3dm/extdata/sample.csv  dir.create(file.path(tempdir(), \"stats\"))  write_stat(file    = paste0(file.path(tempdir(), \"stats\"),'/sample.txt'),            stat    = sample,            verbose = TRUE) #> writing /tmp/RtmpQmMuc6/stats/sample.txt   write_stat(file    = paste0(file.path(tempdir(), \"stats\"),'/sample.csv'),            stat    = sample,            verbose = TRUE) #> writing /tmp/RtmpQmMuc6/stats/sample.csv"}]
