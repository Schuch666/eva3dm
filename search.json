[{"path":[]},{"path":"https://schuch666.github.io/eva3dm/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://schuch666.github.io/eva3dm/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://schuch666.github.io/eva3dm/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://schuch666.github.io/eva3dm/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://schuch666.github.io/eva3dm/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team underschuch@gmail.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://schuch666.github.io/eva3dm/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available http://contributor-covenant.org/version/1/4","code":""},{"path":"https://schuch666.github.io/eva3dm/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to eva3dm","title":"Contributing to eva3dm","text":"Thank contributions! Following guidelines help streamline process contributing make sure ’re page. ask read guide follow best abilities, welcome contributions , regardless level experience. participating project, agree abide code conduct.","code":""},{"path":"https://schuch666.github.io/eva3dm/CONTRIBUTING.html","id":"types-of-contributions","dir":"","previous_headings":"","what":"Types of contributions","title":"Contributing to eva3dm","text":"Don’t feel must computer whiz make meaningful contributions. Feel free : Identify areas future development (open Issue) Identify issues/bugs (open Issue) Write tutorials/vignettes (open Pull Request contribute ones , make elsewhere send us link) Add functionality (open Pull Request) Fix bugs (open Pull Request)","code":""},{"path":"https://schuch666.github.io/eva3dm/CONTRIBUTING.html","id":"new-to-github","dir":"","previous_headings":"","what":"New to GitHub?","title":"Contributing to eva3dm","text":"Getting ready make first contribution? couple tutorials may wish check : Tutorial first-timers GitHub setup GitHub pull requests.","code":""},{"path":"https://schuch666.github.io/eva3dm/CONTRIBUTING.html","id":"how-to-contribute-code","dir":"","previous_headings":"","what":"How to contribute code","title":"Contributing to eva3dm","text":"Fork repository Clone repository GitHub computer e.g,. git clone https://github.com/schuch666/eva3dm.git git remote add upstream https://github.com/schuch666/eva3dm.git making changes make sure pull changes upstream git pull upstream changes beyond minor typos, add item NEWS.md describing changes add DESCRIPTION file contributor Push GitHub account Submit pull request home base (likely master branch, check make sure) schuch666/eva3dm","code":""},{"path":"https://schuch666.github.io/eva3dm/CONTRIBUTING.html","id":"code-formatting","dir":"","previous_headings":"","what":"Code formatting","title":"Contributing to eva3dm","text":"general follow convention https://r-pkgs.org/code.html#code-style (snake_case functions argument names, etc.) conflict, default style eva3dm Use explicit package imports (.e. package_name::package_function) avoid @import possible","code":""},{"path":"https://schuch666.github.io/eva3dm/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Schuch. Author, maintainer.","code":""},{"path":"https://schuch666.github.io/eva3dm/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schuch D (2025). “eva3dm: R-package model evaluation 3D weather air quality models.” Journal Open Source Software, 6. doi:10.21105/joss.07797, https://joss.theoj.org/papers/10.21105/joss.07797. Schuch D (2025). eva3dm: Evaluation 3D Meteorological Air Quality Models. R package version 1.10, https://schuch666.github.io/eva3dm/.","code":"@Article{,   title = {{eva3dm: A R-package for model evaluation of 3D weather and air quality models}},   author = {Daniel Schuch},   year = {2025},   journal = {The Journal of Open Source Software},   url = {https://joss.theoj.org/papers/10.21105/joss.07797},   pages = {6},   doi = {10.21105/joss.07797}, } @Manual{,   title = {eva3dm: Evaluation of 3D Meteorological and Air Quality Models},   author = {Daniel Schuch},   year = {2025},   note = {R package version 1.10},   url = {https://schuch666.github.io/eva3dm/}, }"},{"path":[]},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"R-package focusing EVAluation 3D weather air quality Models, streamlining entire workflow data preparation post-processing, statistical analysis, visualization [1]. Whether ’re working meteorological models like WRF evaluating air quality simulations (WRF-Chem, CAMx, WACCM, etc), eva3dm provides comprehensive toolkit handle observational data, model outputs, evaluation metrics efficient reproducible manner. Key Features: - Pre-processing observational model data - Post-processing tools extracting time-series, calculating derived variables (e.g., accumulated rain, humidity variables wind variables), preparing data analysis - Statistical categorical model evaluation - Custom plotting tools spatial data georeferencing evaluation results - Integration packages like terra, ncdf4, qualR, riem openair [1] Schuch, D., (2025). “eva3dm: R-package model evaluation 3D weather air quality models.” Journal Open Source Software, 10(108), 7797, doi:10.21105/joss.07797","code":""},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"instalation","dir":"","previous_headings":"","what":"Instalation","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"Open R session type following command terminal install official version CRAN: install.packages(\"eva3dm\") last version can installed directly github (using remotes package, example): remotes::install_github(\"schuch666/eva3dm\") functions include examples documentation.","code":""},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"recomended-workflow","dir":"","previous_headings":"","what":"Recomended Workflow","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"following workflow recommended: 1. Pre-processing observations: Download observations, time-series meteorological variables can obtained METAR (METeorological Aerodrome Report) can downloaded using R-package riem via Iowa State University site, time-series pollutant concentrations Brazil can downloaded using R-package qualR, QUALAR MonitorAir sites, range satellite products available NASA giovanni website. QA observation data. Process observation data evaluation. Process site-list plan extract time-series model. 2. Pre-processing model output: Extraction pre-processing model outputs; 3. Model Evaluation: functions eva() (evaluate time-series) sat() (evaluate satellite products) can used perform statistical (details stat()) categorical (details cate()) evaluation; 4. Visualization: try visualization functions package packages. package includes:","code":""},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"model-post-processing-functions","dir":"","previous_headings":"","what":"Model Post-processing functions:","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"✔ extract_serie() extract save time-series WRF outputs input files (compatible NetCDF files); ✔ extract_mean() extract, average (max, min, etc) save variables NetCDF file; ✔ extract_max_8h() extract, calculate maximum (avarage, max, min) 8h average save variables NetCDF file; ✔ wrf_rast() extract variables create SpatRaster SpatVector WRF files (compatible NetCDF files) contrapart rast_to_netcdf() converts rast array compatible NetCDF WRF file;","code":""},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"data-pre-processing-functions","dir":"","previous_headings":"","what":"Data pre-processing functions:","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"✔ mda8(), ma8h(), hourly(), daily() process calculate calculate time-series; ✔ rh2q(), q2rh(), convert humidity units. ✔ uv2ws(), uv2wd(), convert model wind components wind speed velocity. ✔ rain() calculate hourly precipitation model accumulated precipitation variables.","code":""},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"model-evaluation-functions","dir":"","previous_headings":"","what":"Model evaluation functions:","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"✔ eva() data pairing evaluation time-series, %% allows fair evaluation; ✔ sat() evaluation satellite image, %% can used fair evaluation; ✔ stat() calculate statistical metrics (integrated eva() sat()); ✔ cate() calculate categorical metrics (integrated eva() sat()); ✔ write_stat() read_stat() write read evaluation results eva() sat().","code":""},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"visualization-and-utility-functions","dir":"","previous_headings":"","what":"Visualization and Utility functions:","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"✔ ncdump() print ncdump -h equivalent command NetCDF file; ✔ vars() return name variables NetCDF file; ✔ atr() read write attributes Netcdf file; ✔ interp() Interpolation (project resample); ✔ plot_rast() custom plot terra SpatRaster objects; ✔ plot_diff() custom plot absolute relative difference terra SpatRaster objects; ✔ overlay() custom plot overlay points plot point-data,%% can used georeference evaluation results; ✔ legend_range() custom legend, display max, min average; ✔ template() function create post-processing evaluation scripts;","code":""},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"speciall-functions","dir":"","previous_headings":"","what":"Speciall functions:","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"✔ %% combine table (results eva() sat() example) table geographical coordinates. goal function georeference visualize statistical results. ✔ %% filter table (model/observations time-series) based second table (using column names). Also can used crop SpatRaster based second SpatRaster. goal used perform fair comparison different evaluations (using number observation).","code":""},{"path":"https://schuch666.github.io/eva3dm/index.html","id":"contributing-to-eva3dm","dir":"","previous_headings":"","what":"Contributing to eva3dm","title":"Evaluation of 3D Meteorological and Air Quality Models","text":"like contribute eva3dm take look contribution guidelines page participating project agree abide code conduct terms.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/atr.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and write attributes on a NetCDF file — atr","title":"Read and write attributes on a NetCDF file — atr","text":"Read write metadata information NetCDF files","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/atr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and write attributes on a NetCDF file — atr","text":"","code":"atr(file = NA, var = \"?\", att = NA, action = \"get\", value = NA, verbose = TRUE)"},{"path":"https://schuch666.github.io/eva3dm/reference/atr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and write attributes on a NetCDF file — atr","text":"file file name var variable name, 0 global \"?\" show options att attribute names (NA get attnames) action \"get\" (default), \"write\" \"print\" (return value) attribute value value write verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/atr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and write attributes on a NetCDF file — atr","text":"string NetCDF attribute value","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/atr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read and write attributes on a NetCDF file — atr","text":"","code":"nc <- paste0(system.file(\"extdata\",package=\"eva3dm\"),'/wrfinput_d01') atr(nc,0) #> global attributes: #> TITLE START_DATE SIMULATION_START_DATE WEST-EAST_GRID_DIMENSION SOUTH-NORTH_GRID_DIMENSION BOTTOM-TOP_GRID_DIMENSION DX DY GRIDTYPE DIFF_OPT KM_OPT DAMP_OPT DAMPCOEF KHDIF KVDIF MP_PHYSICS RA_LW_PHYSICS RA_SW_PHYSICS SF_SFCLAY_PHYSICS SF_SURFACE_PHYSICS BL_PBL_PHYSICS CU_PHYSICS SF_LAKE_PHYSICS SURFACE_INPUT_SOURCE SST_UPDATE GRID_FDDA GFDDA_INTERVAL_M GFDDA_END_H GRID_SFDDA SGFDDA_INTERVAL_M SGFDDA_END_H HYPSOMETRIC_OPT USE_THETA_M USE_MAXW_LEVEL USE_TROP_LEVEL GWD_OPT SF_URBAN_PHYSICS SF_OCEAN_PHYSICS SIMULATION_INITIALIZATION_TYPE WEST-EAST_PATCH_START_UNSTAG WEST-EAST_PATCH_END_UNSTAG WEST-EAST_PATCH_START_STAG WEST-EAST_PATCH_END_STAG SOUTH-NORTH_PATCH_START_UNSTAG SOUTH-NORTH_PATCH_END_UNSTAG SOUTH-NORTH_PATCH_START_STAG SOUTH-NORTH_PATCH_END_STAG BOTTOM-TOP_PATCH_START_UNSTAG BOTTOM-TOP_PATCH_END_UNSTAG BOTTOM-TOP_PATCH_START_STAG BOTTOM-TOP_PATCH_END_STAG GRID_ID PARENT_ID I_PARENT_START J_PARENT_START PARENT_GRID_RATIO DT CEN_LAT CEN_LON TRUELAT1 TRUELAT2 MOAD_CEN_LAT STAND_LON POLE_LAT POLE_LON GMT JULYR JULDAY MAP_PROJ MAP_PROJ_CHAR MMINLU NUM_LAND_CAT ISWATER ISLAKE ISICE ISURBAN ISOILWATER HYBRID_OPT ETAC #> NULL atr(nc,'Times') #> variable Times attritutes: #> not found #> NULL atr(nc,'XLAT') #> variable XLAT attritutes: #> MemoryOrder description units stagger FieldType #> NULL atr(nc,'XLONG') #> variable XLONG attritutes: #> MemoryOrder description units stagger FieldType #> NULL  atr(nc,'XLONG','MemoryOrder') #> XLONG attribute MemoryOrder: #> XY #> [1] \"XY\" atr(nc,'XLONG','description') #> XLONG attribute description: #> LONGITUDE, WEST IS NEGATIVE #> [1] \"LONGITUDE, WEST IS NEGATIVE\" atr(nc,'XLONG','units') #> XLONG attribute units: #> degree east #> [1] \"degree east\" atr(nc,'XLONG','stagger') #> XLONG attribute stagger: #> empty #> [1] \"\" atr(nc,'XLONG','FieldType') #> XLONG attribute FieldType: #> 104 #> [1] 104"},{"path":"https://schuch666.github.io/eva3dm/reference/cate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate categorical statistics in related to a threshold — cate","title":"Calculate categorical statistics in related to a threshold — cate","text":"Calculate traditional statistics related threshold","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/cate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate categorical statistics in related to a threshold — cate","text":"","code":"cate(   model,   observation,   threshold,   cutoff = NA,   nobs = 8,   rname,   to.plot = FALSE,   col = \"#4444bb\",   pch = 19,   lty = 3,   lcol = \"#333333\",   lim,   verbose = TRUE,   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/cate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate categorical statistics in related to a threshold — cate","text":"model numeric vector paired model data observation numeric vector paired observation data threshold reference value cutoff (optionally maximum) valid value observation nobs minimum number observations rname row name .plot TRUE plot scatter-plot col color points pch pch points lty lty threshold lines lcol col threshold lines lim limit x y verbose display additional information ... arguments passed plot","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/cate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate categorical statistics in related to a threshold — cate","text":"data.frame including: Accuracy (); Critical Success Index (CSI); Probability Detection (POD); Bias(B); False Alarm Ratio (FAR); Heidke Skill Score (HSS); Pearce skill Score (PSS) ","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/cate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate categorical statistics in related to a threshold — cate","text":"Yu, S., Mathur, R., Schere, K., Kang, D., Pleim, J., Young, J., ... & Rao, S. T. (2008). Evaluation real‐time PM2. 5 forecasts process analysis PM2. 5 formation eastern United States using Eta‐CMAQ forecast model 2004 ICARTT study. Journal Geophysical Research: Atmospheres, 113(D6).","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/cate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate categorical statistics in related to a threshold — cate","text":"","code":"data <- 0.02 * 1:100 set.seed(666) model  <- abs(rnorm(100,0.01))  oldpar <- par(pty=\"s\") cate(model = model, observation = data, threshold = 1,      to.plot = TRUE, rname = 'example')  #>           n  Obs       Sim thr  A      CSI POD  B      FAR HSS PSS #> example 100 1.01 0.8272308   1 43 18.57143  26 66 60.60606 -14 -14 par(oldpar)"},{"path":"https://schuch666.github.io/eva3dm/reference/daily.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate daily mean, min or max — daily","title":"Calculate daily mean, min or max — daily","text":"function calculate daily mean, min max data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/daily.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate daily mean, min or max — daily","text":"","code":"daily(   data,   time = \"date\",   var,   stat = mean,   min_offset = 0,   hour_offset = 0,   numerical = TRUE,   verbose = TRUE )"},{"path":"https://schuch666.github.io/eva3dm/reference/daily.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate daily mean, min or max — daily","text":"data data.frame time column variable columns processed time name time column (default date) POSIXct var name columns calculated stat function statistics calculate (default mean) min_offset minutes observation previous hour (default 0) hour_offset hours observation previous day (default 0) numerical TRUE (default) include numerical columns verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/daily.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate daily mean, min or max — daily","text":"data.frame time daily mean, min max","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/daily.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate daily mean, min or max — daily","text":"","code":"# in case there is connection issue load_data <- function(cond) {   message(paste(\"conection issue, loading pre-downloaded data\"))   DATA <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),                          \"/riem_OAKB_jan_2012.Rds\"))   return(DATA) }  sites <- c(\"OAKB\") for(site in sites){   cat('Trying to download METAR from:',site,'...\\n')   DATA <- tryCatch(riem::riem_measures(station    = sites,                                        date_start = \"2012-01-01\",                                        date_end   = \"2012-02-01\"),                    error = load_data) } #> Trying to download METAR from: OAKB ... data_daily_mean <- daily(DATA,time = 'valid') #> processing daily statistcis ...  data_daily_min  <- daily(DATA[1:7],time = 'valid',stat = min) #> processing daily statistcis ...  data_daily_max  <- daily(DATA[1:7],time = 'valid',stat = max) #> processing daily statistcis ..."},{"path":"https://schuch666.github.io/eva3dm/reference/eva.html","id":null,"dir":"Reference","previous_headings":"","what":"Model statistical evaluation — eva","title":"Model statistical evaluation — eva","text":"Statistical (categorical) evaluation 2 data.frames. input data.frames (model observation) must contain \"date\" column (containing POSIXlt). function perform simple case tests perform time pairing observations model data can calculate statistical evaluation categorical evaluation.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/eva.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model statistical evaluation — eva","text":"","code":"eva(   mo,   ob,   rname = site,   table = NULL,   site = \"ALL\",   wd = FALSE,   fair = NULL,   cutoff = NA,   cutoff_NME = NA,   no_tz = FALSE,   nobs = 8,   eval_function = stat,   select_time,   time = \"date\",   remove_ch = FALSE,   verbose = TRUE,   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/eva.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model statistical evaluation — eva","text":"mo data.frame model data ob data.frame observation data rname row name output (default site argument) table data.frame append results site name stations \"\" (default), see notes wd default FALSE, see notes fair model data.frame (list names) perform fair comparison, see notes cutoff minimum (optionally maximum) valid value observation cutoff_NME minimum (optionally maximum) valid value observation NME no_tz ignore tz input (force GMT) nobs minimum number valid observations, default 8 eval_function evaluation function (default stat) select_time select observation (ob) using time model (mo) data.frame time name time column (containing time POSIXct) remove_ch remove special characters column names verbose display additional information ... arguments passing stats plot","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/eva.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model statistical evaluation — eva","text":"data.frame statistical values stat cate functions.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/eva.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Model statistical evaluation — eva","text":"fair can data.frame character string used analysis, alternatively function wind direction rotation 360 (-360) applied minimize wind direction difference. site == '' (default) columns observations combined one column (observation) columns evaluated together. Special thanks Kiarash Libo help test wind direction option.","code":""},{"path":[]},{"path":"https://schuch666.github.io/eva3dm/reference/eva.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model statistical evaluation — eva","text":"","code":"model <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),                         \"/model.Rds\")) obs   <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),                         \"/obs.Rds\"))  # if there is no observed data # the function return an empty row table <- eva(mo = model, ob = obs, site = \"VVIbes\") #> VVIbes has only 0 valid observations (lesser than 8 obs) print(table) #>        n Obs Sim  r IOA FA2 RMSE MB ME NMB (%) NME (%) #> VVIbes 0  NA  NA NA  NA  NA   NA NA NA      NA      NA  # if the site are not in the input data frame a message is displayed # and the function return an empty row table <- eva(mo = model, ob = obs, site = \"Ibirapuera\") #> Ibirapuera not found in observation input print(table) #>            n Obs Sim  r IOA FA2 RMSE MB ME NMB (%) NME (%) #> Ibirapuera 0  NA  NA NA  NA  NA   NA NA NA      NA      NA  # calculating statistical with a few observed values table <- eva(mo = model, ob = obs, site = \"Americana\") #> Americana has 227 valid observations print(table) #>             n      Obs      Sim         r       IOA       FA2     RMSE #> Americana 227 40.92952 18.18197 0.6492022 0.5934335 0.4229075 32.47269 #>                  MB       ME   NMB (%)  NME (%) #> Americana -22.74754 24.10165 -55.57735 58.88575  # calculating categorical (using 2 for threshold) with a few observed values table <- eva(mo = model, ob = obs, site = \"Americana\",              eval_function = cate, threshold = 2) #> Americana has 227 valid observations print(table) #>             n      Obs      Sim thr        A      CSI      POD        B #> Americana 227 40.92952 18.18197   2 93.39207 93.36283 97.23502 101.3825 #>                FAR     HSS      PSS #> Americana 4.090909 8.44313 7.235023  # calculating categorical (using 2 for threshold) with a few observed values table <- eva(mo = model, ob = obs, site = \"Americana\",              eval_function = cate, threshold = 10) #> Americana has 227 valid observations print(table) #>             n      Obs      Sim thr        A      CSI      POD        B   FAR #> Americana 227 40.92952 18.18197  10 74.00881 71.90476 75.12438 79.60199 5.625 #>                HSS      PSS #> Americana 24.01997 40.50899  # customizing the evaluation function: inclusion of p.value from stats::cor.test() stat_p <- function(x, y, ...){   table         <- eva3dm::stat(x, y, ...)   cor.result    <- stats::cor.test(x, y, ... )   table$p.value <- cor.result$p.value   table         <- table[,c(1:4,12,5:11)]   return(table) }  table <- eva(mo = model, ob = obs, site = \"Americana\",eval_function = stat_p) #> Americana has 227 valid observations print(table) #>             n      Obs      Sim         r      p.value       IOA       FA2 #> Americana 227 40.92952 18.18197 0.6492022 1.488004e-28 0.5934335 0.4229075 #>               RMSE        MB       ME   NMB (%)  NME (%) #> Americana 32.47269 -22.74754 24.10165 -55.57735 58.88575"},{"path":"https://schuch666.github.io/eva3dm/reference/eva3dm-package.html","id":null,"dir":"Reference","previous_headings":"","what":"eva3dm: Evaluation of 3D Meteorological and Air Quality Models — eva3dm-package","title":"eva3dm: Evaluation of 3D Meteorological and Air Quality Models — eva3dm-package","text":"Provides tools post-process, evaluate visualize results 3d Meteorological Air Quality models point observations (.e. surface stations) grid (.e. satellite) observations.","code":""},{"path":[]},{"path":"https://schuch666.github.io/eva3dm/reference/eva3dm-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"eva3dm: Evaluation of 3D Meteorological and Air Quality Models — eva3dm-package","text":"Maintainer: Daniel Schuch underschuch@gmail.com (ORCID)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_max_8h.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a NetCDF file with the surface maximum of O3 — extract_max_8h","title":"Create a NetCDF file with the surface maximum of O3 — extract_max_8h","text":"Read values o3 T2, convert o3 ug m-3 calculate maximum 8-hour moving avarage list files.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_max_8h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a NetCDF file with the surface maximum of O3 — extract_max_8h","text":"","code":"extract_max_8h(   filelist,   variable = \"o3\",   field = \"4d\",   prefix = \"max_8h\",   units = \"ug m-3\",   meta = TRUE,   filename,   verbose = TRUE )"},{"path":"https://schuch666.github.io/eva3dm/reference/extract_max_8h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a NetCDF file with the surface maximum of O3 — extract_max_8h","text":"filelist list files read variable variable name field '4d' (default), '3d', '2d' '2dz' see notes prefix output file, default serie units units netcdf file (default ug m-3), change skip unit conversion meta use Times, XLONG XLAT data (works 2d variable file) filename name file, case prefix used verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_max_8h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a NetCDF file with the surface maximum of O3 — extract_max_8h","text":"return value","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_max_8h.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a NetCDF file with the surface maximum of O3 — extract_max_8h","text":"field argument '4d' / '2dz' used read 4d/3d variable droping 3rd dimention (z).","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_max_8h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a NetCDF file with the surface maximum of O3 — extract_max_8h","text":"","code":"dir.create(file.path(tempdir(), \"MDA8\")) folder <- system.file(\"extdata\",package=\"eva3dm\") wrf_file <- paste0(folder,\"/test_small_o3.nc\") extract_max_8h(filelist = wrf_file,                prefix = paste0(file.path(tempdir(),\"MDA8\"),'/mean'),                field = '3d') #> extracting 8h max of o3 field 3d units: ug m-3  #> reading: /home/runner/work/_temp/Library/eva3dm/extdata/test_small_o3.nc file 1 of 1  #> min: 2.010639e-13 mean: 23.42075 max: 99.85495  #> total times: 24  #> output: /tmp/RtmpfxF4nR/MDA8/mean.o3.nc"},{"path":"https://schuch666.github.io/eva3dm/reference/extract_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a NetCDF file with the surface mean — extract_mean","title":"Create a NetCDF file with the surface mean — extract_mean","text":"Read calculate mean value variable list wrf output files.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a NetCDF file with the surface mean — extract_mean","text":"","code":"extract_mean(   filelist,   variable = \"o3\",   field = \"4d\",   prefix = \"mean\",   units = \"ppmv\",   meta = TRUE,   filename,   verbose = TRUE )"},{"path":"https://schuch666.github.io/eva3dm/reference/extract_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a NetCDF file with the surface mean — extract_mean","text":"filelist list files read variable variable name field '4d' (default), '3d', '2d' '2dz' see notes prefix output file, default serie units units netcdf file (default ppmv) meta use Times, XLONG XLAT data (works 2d variable file) filename name file, case prefix used verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a NetCDF file with the surface mean — extract_mean","text":"return value","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_mean.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a NetCDF file with the surface mean — extract_mean","text":"field argument '4d' / '2dz' used read 4d/3d variable droping 3rd dimention (z).","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a NetCDF file with the surface mean — extract_mean","text":"","code":"dir.create(file.path(tempdir(), \"MEAN\")) folder <- system.file(\"extdata\",package=\"eva3dm\") wrf_file <- paste0(folder,\"/wrf.day1.o3.nc\") extract_mean(filelist = wrf_file,prefix = paste0(file.path(tempdir(),\"MEAN\"),'/mean')) #> extracting mean of o3 field 4d  #> reading: /home/runner/work/_temp/Library/eva3dm/extdata/wrf.day1.o3.nc file 1 of 1  #> min: 2.123069e-05 mean: 0.007767247 max: 0.03175572  #> total times: 1  #> output: /tmp/RtmpfxF4nR/MEAN/mean.o3.nc"},{"path":"https://schuch666.github.io/eva3dm/reference/extract_serie.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract time series of wrf file list of lat/lon — extract_serie","title":"Extract time series of wrf file list of lat/lon — extract_serie","text":"Read extract data list wrf output files table lat/lon points based distance points center model grid points, points outside domain (points domain boundary) extracted.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_serie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract time series of wrf file list of lat/lon — extract_serie","text":"","code":"extract_serie(   filelist,   point,   variable = \"o3\",   field = \"4d\",   level = 1,   prefix = \"serie\",   new = \"check\",   return.nearest = FALSE,   fast = FALSE,   use_ij = FALSE,   latitude = \"XLAT\",   longitude = \"XLONG\",   use_TFLAG = FALSE,   use_datesec = FALSE,   id = \"id\",   remove_ch = FALSE,   verbose = TRUE )"},{"path":"https://schuch666.github.io/eva3dm/reference/extract_serie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract time series of wrf file list of lat/lon — extract_serie","text":"filelist list files read point data.frame lat/lon variable variable name field '4d' (default), '3d', '2d' '2dz' see notes level model level extracted prefix output file, default serie new TRUE, FALSE 'check' see notes return.nearest return data.frame nearest points instead extract serie fast faster calculation grid distances less precise use_ij logical, use j input instead calculate latitude name latitude coordinate variable netcdf longitude name longitude coordinate variable netcdf use_TFLAG use variable TFLAG (CMAQ / smoke) instead Times (WRF) use_datesec use variable date datesec (WACCM / CAM-Chem) instead Times (WRF) id name column station names, point SpatVector (points) terra package remove_ch remove special characters row.names verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_serie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract time series of wrf file list of lat/lon — extract_serie","text":"return value","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_serie.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract time series of wrf file list of lat/lon — extract_serie","text":"field argument '4d' '2dz' used read 4d/3d variable droping 3rd dimention (z). new = TRUE create new file, new = FALSE append data old file, new = 'check' check file exist append file exist create file doesnt exist CAMx time-series, use options: use_TFLAG=T, latitude='latitude', longitude='longitude', new=T WACCM time-series, use options: use_datesec=T, latitude='lat', longitude='lon', new=T site-list two global data-sets (METAR AERONET) provided examples site-list stations Brazil (INMET Air Quality stations).","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/extract_serie.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract time series of wrf file list of lat/lon — extract_serie","text":"","code":"cat('Example 1: METAR site list\\n') #> Example 1: METAR site list sites <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/sites_METAR.Rds\"))  cat('Example 2: Integrated Surface Dataset (ISD) site list\\n') #> Example 2: Integrated Surface Dataset (ISD) site list sites <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/sites_ISD.Rds\"))  cat('Example 4: AERONET site list\\n') #> Example 4: AERONET site list sites <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/sites_AERONET.Rds\"))  cat('Example 5: list of INMET stations on Brazil\\n') #> Example 5: list of INMET stations on Brazil sites <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/sites_INMET.Rds\"))  cat('Example 6: list of Air Quality stations on Brazil\\n') #> Example 6: list of Air Quality stations on Brazil sites <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/sites_AQ_BR.Rds\"))  files    <- dir(path = system.file(\"extdata\",package=\"eva3dm\"),                 pattern = 'wrf.day',                 full.names = TRUE) dir.create(file.path(tempdir(),\"SERIE\")) folder <- file.path(tempdir(),\"SERIE\")  # extract data for 3 locations extract_serie(filelist = files, point = sites[1:3,],prefix = paste0(folder,'/serie')) #> extracting series of o3 field 4d for 3 points #> dim of lat/lon: 125 125  #> used dim of lat/lon: 125 125  #> inside lat / lon range: 3 points #> calculating distances... #>              lat       lon    name agency            class         city state #> BA0001 -12.68638 -38.33360 Gravatá  INEMA Não classificada     Camaçari    BA #> BA0002 -12.63026 -38.35853   Cobre  INEMA Não classificada Dias D'Ávila    BA #> BA0003 -12.80115 -38.22397  Areias  INEMA Não classificada     Camaçari    BA #>        start   i  j model_lat model_lon #> BA0001  2000 110 67 -12.70324 -38.39191 #> BA0002  2000 110 67 -12.70324 -38.39191 #> BA0003  2000 110 67 -12.70324 -38.39191 #> reading o3 : /home/runner/work/_temp/Library/eva3dm/extdata/wrf.day1.o3.nc file 1 of 3  #> reading o3 : /home/runner/work/_temp/Library/eva3dm/extdata/wrf.day2.o3.nc file 2 of 3  #> reading o3 : /home/runner/work/_temp/Library/eva3dm/extdata/wrf.day3.o3.nc file 3 of 3  #> output: /tmp/RtmpfxF4nR/SERIE/serie.o3.Rds"},{"path":"https://schuch666.github.io/eva3dm/reference/get_distances.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the distance in kilometers between two points — get_distances","title":"Get the distance in kilometers between two points — get_distances","text":"Get distance kilometers two points","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/get_distances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the distance in kilometers between two points — get_distances","text":"","code":"get_distances(lat1, long1, lat2, long2, R = 6371)"},{"path":"https://schuch666.github.io/eva3dm/reference/get_distances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the distance in kilometers between two points — get_distances","text":"lat1 Latitude decimals long1 Longitude decimals lat2 Latitude decimals long2 Longitude decimals R Radius earth kmdescription (R=6371)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/get_distances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the distance in kilometers between two points — get_distances","text":"numeric vector distance kilometers. #' source: https://github.com/gustavobio/brclimate/blob/master/R/get_distances.R","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-IN-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the common columns — %IN%","title":"Returns the common columns — %IN%","text":"results 'd01 d02' style syntax","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-IN-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the common columns — %IN%","text":"","code":"x %IN% y"},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-IN-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the common columns — %IN%","text":"x data.frame y data.frame character string","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-IN-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the common columns — %IN%","text":"data.frame common columns cropped SpatRaster","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-IN-grapes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Returns the common columns — %IN%","text":"message always displayed keep easy track debug issues (results evaluation process). Can used crop rast objects, arguments sat() function","code":""},{"path":[]},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-IN-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the common columns — %IN%","text":"","code":"times <- seq(as.POSIXct('2024-01-01',tz = 'UTC'),              as.POSIXct('2024-01-02',tz = 'UTC'),              by = 'hour') randon_stuff <- rnorm(25,10)  observation <- data.frame(date   = times,                           site_1 = randon_stuff,                           site_3 = randon_stuff,                           site_4 = randon_stuff,                           site_5 = randon_stuff,                           site_6 = randon_stuff,                           site_7 = randon_stuff)  model_d01 <- data.frame(date  = times,                         site_1=randon_stuff+1,                         site_2=randon_stuff+2,                         site_3=randon_stuff+3,                         site_4=randon_stuff+4)  model_d02 <- data.frame(date  = times,                         site_1=randon_stuff-1,                         site_3=randon_stuff-3)  # multiline model_d01_in_d02 <- model_d01 %IN% model_d02 #> using model_d01 in model_d02  eva(mo = model_d01_in_d02, ob = observation, rname = 'd01 in d02') #> combining all sites... #> site_1  site_3  ... #> ALL has 50 valid observations #>             n      Obs      Sim         r       IOA FA2     RMSE MB ME  NMB (%) #> d01 in d02 50 9.789513 11.78951 0.7278543 0.5573628   1 2.236068  2  2 20.43003 #>             NME (%) #> d01 in d02 20.43003  # or single line eva(mo = model_d01 %IN% model_d02, ob = observation, rname = 'd01 in d02') #> using model_d01 in model_d02  #> combining all sites... #> site_1  site_3  ... #> ALL has 50 valid observations #>             n      Obs      Sim         r       IOA FA2     RMSE MB ME  NMB (%) #> d01 in d02 50 9.789513 11.78951 0.7278543 0.5573628   1 2.236068  2  2 20.43003 #>             NME (%) #> d01 in d02 20.43003 # or eva(mo = model_d01, ob = observation %IN% model_d02, rname = 'd01 in d02') #> using observation in model_d02  #> combining all sites... #> site_1  site_3  ... #> ALL has 50 valid observations #>             n      Obs      Sim         r       IOA FA2     RMSE MB ME  NMB (%) #> d01 in d02 50 9.789513 11.78951 0.7278543 0.5573628   1 2.236068  2  2 20.43003 #>             NME (%) #> d01 in d02 20.43003"},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-at-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine stats and site list to overlay plot — %at%","title":"Combine stats and site list to overlay plot — %at%","text":"combines stats (individual station evaluation) site list SpatVector using row.names","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-at-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine stats and site list to overlay plot — %at%","text":"","code":"stat %at% site"},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-at-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine stats and site list to overlay plot — %at%","text":"stat data.frame stats variable (containing row.names variables) site data.frame site list (containing row.names, lat lon)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-at-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine stats and site list to overlay plot — %at%","text":"SpatVector (terra package)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/grapes-at-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine stats and site list to overlay plot — %at%","text":"","code":"sites <- data.frame(lat = c(-22.72500,-23.64300,-20.34350),                     lon = c(-47.34800,-46.49200,-40.31800),                     row.names = c('Americana','SAndre','VVIbes'),                     stringsAsFactors = F) model<- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/model.Rds\")) obs  <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/obs.Rds\"))  # evaluation by station stats <- eva(mo = model, ob = obs, site = \"Americana\") #> Americana has 227 valid observations stats <- eva(mo = model, ob = obs, site = \"SAndre\",table = stats) #> SAndre has 207 valid observations stats <- eva(mo = model, ob = obs, site = \"VVIbes\",table = stats) #> VVIbes has only 0 valid observations (lesser than 8 obs) # evaluation using all stations stats <- eva(mo = model, ob = obs, site = \"ALL\", table = stats) #> combining all sites... #> Americana  SAndre  VVIbes  ... #> ALL has 434 valid observations  print(stats) #>             n      Obs      Sim         r       IOA       FA2     RMSE #> Americana 227 40.92952 18.18197 0.6492022 0.5934335 0.4229075 32.47269 #> SAndre    207 60.62802 15.66744 0.6246762 0.4813952 0.1449275 59.21330 #> VVIbes      0       NA       NA        NA        NA        NA       NA #> ALL       434 50.32488 16.98265 0.5573867 0.5085711 0.2903226 47.15775 #>                  MB       ME   NMB (%)  NME (%) #> Americana -22.74754 24.10165 -55.57735 58.88575 #> SAndre    -44.96058 45.64932 -74.15808 75.29409 #> VVIbes           NA       NA        NA       NA #> ALL       -33.34224 34.37900 -66.25398 68.31411  geo_stats <- stats %at% sites #> georeferencing stats at sites   print(geo_stats) #>  class       : SpatVector  #>  geometry    : points  #>  dimensions  : 3, 12  (geometries, attributes) #>  extent      : -47.348, -40.318, -23.643, -20.3435  (xmin, xmax, ymin, ymax) #>  coord. ref. :   #>  names       :      site     n   Obs   Sim      r    IOA    FA2  RMSE     MB #>  type        :     <chr> <num> <num> <num>  <num>  <num>  <num> <num>  <num> #>  values      : Americana   227 40.93 18.18 0.6492 0.5934 0.4229 32.47 -22.75 #>                   SAndre   207 60.63 15.67 0.6247 0.4814 0.1449 59.21 -44.96 #>                   VVIbes     0    NA    NA     NA     NA     NA    NA     NA #>     ME NMB (%) NME (%) #>  <num>   <num>   <num> #>   24.1  -55.58   58.89 #>  45.65  -74.16   75.29 #>     NA      NA      NA"},{"path":"https://schuch666.github.io/eva3dm/reference/hourly.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate hourly mean, min or max — hourly","title":"Calculate hourly mean, min or max — hourly","text":"function calculate Ozone Maximum Daily 8-hr Average 8-hr moving Average data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/hourly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate hourly mean, min or max — hourly","text":"","code":"hourly(   data,   time = \"date\",   var,   stat = mean,   min_offset = 30,   numerical = TRUE,   verbose = TRUE )"},{"path":"https://schuch666.github.io/eva3dm/reference/hourly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate hourly mean, min or max — hourly","text":"data data.frame time column variable columns processed time name time column (default date) POSIXct var name columns calculated stat function statistics calculate (default mean) min_offset minutes observation previous hour (default 30) numerical TRUE (default) includes numerical columns verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/hourly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate hourly mean, min or max — hourly","text":"data.frame including numerical columns data.frame time hourly mean, min max","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/hourly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate hourly mean, min or max — hourly","text":"","code":"# in case there is connection issue load_data <- function(cond) {   message(paste(\"conection issue, loading pre-downloaded data\"))   DATA <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),                          \"/riem_OAHR_jan_2012.Rds\"))   return(DATA) }  sites <- c(\"OAHR\") for(site in sites){   cat('Trying to download METAR from:',site,'...\\n')   DATA <- tryCatch(riem::riem_measures(station    = sites,                                        date_start = \"2012-01-01\",                                        date_end   = \"2012-02-01\"),                    error = load_data) } #> Trying to download METAR from: OAHR ... data_hourly_mean <- hourly(DATA,time = 'valid') #> processing hourly data ...  data_hourly_min  <- hourly(DATA[1:7],time = 'valid',stat = min) #> processing hourly data ...  #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf #> Warning: no non-missing arguments to min; returning Inf data_hourly_max  <- hourly(DATA[1:7],time = 'valid',stat = max) #> processing hourly data ...  #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf #> Warning: no non-missing arguments to max; returning -Inf"},{"path":"https://schuch666.github.io/eva3dm/reference/interp.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpolation (project and resample) — interp","title":"Interpolation (project and resample) — interp","text":"function project interpolate rast","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/interp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpolation (project and resample) — interp","text":"","code":"interp(x, y, method = \"bilinear\", mask, verbose = FALSE)"},{"path":"https://schuch666.github.io/eva3dm/reference/interp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpolation (project and resample) — interp","text":"x rast interpolated y target rast interpolation method passed terra::resample mask optional SpatVector mask results verbose display additional information (used)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/interp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interpolation (project and resample) — interp","text":"SpatRaster (terra package)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/interp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpolation (project and resample) — interp","text":"","code":"model_o3 <- terra::rast(paste0(system.file(\"extdata\",package=\"eva3dm\"),                               \"/camx_no2.Rds\")) omi_o3   <- terra::rast(paste0(system.file(\"extdata\",package=\"eva3dm\"),                               \"/omi_no2.Rds\"))  # interpolate omi O3 column to model grid omi_o3c_interp_model <- interp(omi_o3,model_o3)  # interpolate model o3 column to omi grid model_o3c_interp_omi <- interp(omi_o3,model_o3)"},{"path":"https://schuch666.github.io/eva3dm/reference/legend_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a legend with the range of values — legend_range","title":"Plot a legend with the range of values — legend_range","text":"Plot legend range values","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/legend_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a legend with the range of values — legend_range","text":"","code":"legend_range(   x,   y,   text.width = NULL,   dig = c(2, 2, 2),   xjust = 0.005,   yjust = 0.95,   horiz = TRUE,   y.intersp = 0.5,   x.intersp = 0.5,   show.mean = TRUE,   unit = \"\",   label_mean = \"ALL:\",   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/legend_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a legend with the range of values — legend_range","text":"x rast array y rast array mean (x used range case) text.width Longitude decimals dig vector number digits plot xjust passed legend yjust passed legend horiz passed legend y.intersp passed legend x.intersp passed legend show.mean set TRUE hide mean value unit string units label_mean label case y provided ... extra arguments passed legend","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/legend_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a legend with the range of values — legend_range","text":"return value","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/legend_range.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot a legend with the range of values — legend_range","text":"use rast use change projection text.width can vary depending map dimensions","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/legend_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a legend with the range of values — legend_range","text":"","code":"x <- 1:10 + rnorm(10,sd = .4) plot(x,ty='l') legend_range(x)"},{"path":"https://schuch666.github.io/eva3dm/reference/ma8h.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate 8-hour moving average — ma8h","title":"Calculate 8-hour moving average — ma8h","text":"function calculate Ozone 8-hour moving average data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/ma8h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate 8-hour moving average — ma8h","text":"","code":"ma8h(data, time = \"date\", var, verbose = TRUE, ...)"},{"path":"https://schuch666.github.io/eva3dm/reference/ma8h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate 8-hour moving average — ma8h","text":"data data.frame time column variable columns processed time name time column (default date) POSIXct var name columns calculated verbose display additional information ... parameters passed hourly","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/ma8h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate 8-hour moving average — ma8h","text":"data.frame time 8-hour moving average","code":""},{"path":[]},{"path":"https://schuch666.github.io/eva3dm/reference/ma8h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate 8-hour moving average — ma8h","text":"","code":"model_file <- paste(system.file(\"extdata\", package = \"eva3dm\"),                                 \"/model_o3_ugm3_36km.Rds\", sep=\"\") model      <- readRDS(model_file) model_8h   <- ma8h(model) #> processing hourly data ...  #> processing maximum daily 8h average ...  plot(model$date,model$Campinas, pch = 19,      main = expression(O[3]~~'['*mu*g*m^-3*']')) points(model_8h$date,model_8h$Campinas, col = 'blue', pch = 19) legend('topleft',bty = 'n',        pch = 19,        legend = c('hourly','8h-mov average'),        col = c('black','blue'))"},{"path":"https://schuch666.github.io/eva3dm/reference/mda8.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum Daily 8-hr Average — mda8","title":"Maximum Daily 8-hr Average — mda8","text":"function calculate Ozone Maximum Daily 8-hr Average 8-hr moving Average data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/mda8.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum Daily 8-hr Average — mda8","text":"","code":"mda8(data, time = \"date\", var, verbose = TRUE)"},{"path":"https://schuch666.github.io/eva3dm/reference/mda8.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum Daily 8-hr Average — mda8","text":"data data.frame time column variable columns processed time name time column (default date) POSIXct var name columns calculated verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/mda8.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum Daily 8-hr Average — mda8","text":"data.frame time maximum daily 8-hr average","code":""},{"path":[]},{"path":"https://schuch666.github.io/eva3dm/reference/mda8.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum Daily 8-hr Average — mda8","text":"","code":"model_file <- paste(system.file(\"extdata\", package = \"eva3dm\"),                     \"/model_o3_ugm3_36km.Rds\", sep=\"\") model      <- readRDS(model_file) model_mda8 <- mda8(model) #> processing hourly data ...  #> processing maximum daily 8h average ...  #> processing daily maximum ...  model_8h   <- ma8h(model) #> processing hourly data ...  #> processing maximum daily 8h average ...  plot(model$date,model$Campinas, pch = 19,      main = expression(O[3]~~'['*mu*g*m^-3*']')) points(model_8h$date,model_8h$Campinas, col = 'blue', pch = 19) points(model_mda8$date + 17*60*60,model_mda8$Campinas,        col = 'red', pch = 4, cex = 2) legend('topleft',bty = 'n',        pch = c(19,19,4),        legend = c('hourly','8h-mov average','MD8A'),        col = c('black','blue','red'))"},{"path":"https://schuch666.github.io/eva3dm/reference/ncdump.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a 'ncdump -h' command — ncdump","title":"Print a 'ncdump -h' command — ncdump","text":"Read NetCDF print medatada","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/ncdump.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a 'ncdump -h' command — ncdump","text":"","code":"ncdump(file = file.choose())"},{"path":"https://schuch666.github.io/eva3dm/reference/ncdump.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a 'ncdump -h' command — ncdump","text":"file file name","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/ncdump.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a 'ncdump -h' command — ncdump","text":"return value, display information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/ncdump.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print a 'ncdump -h' command — ncdump","text":"","code":"ncdump(file = paste0(system.file(\"extdata\",package=\"eva3dm\"),                      '/wrfinput_d01')) #> File /home/runner/work/_temp/Library/eva3dm/extdata/wrfinput_d01 (NC_FORMAT_CLASSIC): #>  #>      3 variables (excluding dimension variables): #>         char Times[DateStrLen,Time]    #>         float XLAT[west_east,south_north]    #>             MemoryOrder: XY #>             description: LATITUDE, SOUTH IS NEGATIVE #>             units: degree north #>             stagger:  #>             FieldType: 104 #>         float XLONG[west_east,south_north]    #>             MemoryOrder: XY #>             description: LONGITUDE, WEST IS NEGATIVE #>             units: degree east #>             stagger:  #>             FieldType: 104 #>  #>      4 dimensions: #>         DateStrLen  Size:19  #>         Time  Size:1   *** is unlimited ***  #>         west_east  Size:149  #>         south_north  Size:99  #>  #>     79 global attributes: #>         TITLE:  OUTPUT FROM REAL_EM V3.9.1.1 PREPROCESSOR #>         START_DATE: 2011-08-01_00:00:00 #>         SIMULATION_START_DATE: 2011-08-01_00:00:00 #>         WEST-EAST_GRID_DIMENSION: 150 #>         SOUTH-NORTH_GRID_DIMENSION: 100 #>         BOTTOM-TOP_GRID_DIMENSION: 35 #>         DX: 9000 #>         DY: 9000 #>         GRIDTYPE: C #>         DIFF_OPT: 1 #>         KM_OPT: 4 #>         DAMP_OPT: 3 #>         DAMPCOEF: 0.200000002980232 #>         KHDIF: 0 #>         KVDIF: 0 #>         MP_PHYSICS: 10 #>         RA_LW_PHYSICS: 4 #>         RA_SW_PHYSICS: 4 #>         SF_SFCLAY_PHYSICS: 1 #>         SF_SURFACE_PHYSICS: 2 #>         BL_PBL_PHYSICS: 1 #>         CU_PHYSICS: 11 #>         SF_LAKE_PHYSICS: 0 #>         SURFACE_INPUT_SOURCE: 1 #>         SST_UPDATE: 0 #>         GRID_FDDA: 0 #>         GFDDA_INTERVAL_M: 0 #>         GFDDA_END_H: 0 #>         GRID_SFDDA: 0 #>         SGFDDA_INTERVAL_M: 0 #>         SGFDDA_END_H: 0 #>         HYPSOMETRIC_OPT: 2 #>         USE_THETA_M: 0 #>         USE_MAXW_LEVEL: 0 #>         USE_TROP_LEVEL: 0 #>         GWD_OPT: 0 #>         SF_URBAN_PHYSICS: 1 #>         SF_OCEAN_PHYSICS: 0 #>         SIMULATION_INITIALIZATION_TYPE: REAL-DATA CASE #>         WEST-EAST_PATCH_START_UNSTAG: 1 #>         WEST-EAST_PATCH_END_UNSTAG: 149 #>         WEST-EAST_PATCH_START_STAG: 1 #>         WEST-EAST_PATCH_END_STAG: 150 #>         SOUTH-NORTH_PATCH_START_UNSTAG: 1 #>         SOUTH-NORTH_PATCH_END_UNSTAG: 99 #>         SOUTH-NORTH_PATCH_START_STAG: 1 #>         SOUTH-NORTH_PATCH_END_STAG: 100 #>         BOTTOM-TOP_PATCH_START_UNSTAG: 1 #>         BOTTOM-TOP_PATCH_END_UNSTAG: 34 #>         BOTTOM-TOP_PATCH_START_STAG: 1 #>         BOTTOM-TOP_PATCH_END_STAG: 35 #>         GRID_ID: 1 #>         PARENT_ID: 1 #>         I_PARENT_START: 1 #>         J_PARENT_START: 1 #>         PARENT_GRID_RATIO: 1 #>         DT: 45 #>         CEN_LAT: -23.5499954223633 #>         CEN_LON: -45 #>         TRUELAT1: -23 #>         TRUELAT2: -24 #>         MOAD_CEN_LAT: -23.5499954223633 #>         STAND_LON: -45 #>         POLE_LAT: 90 #>         POLE_LON: 0 #>         GMT: 0 #>         JULYR: 2011 #>         JULDAY: 213 #>         MAP_PROJ: 1 #>         MAP_PROJ_CHAR: Lambert Conformal #>         MMINLU: MODIFIED_IGBP_MODIS_NOAH #>         NUM_LAND_CAT: 21 #>         ISWATER: 17 #>         ISLAKE: 21 #>         ISICE: 15 #>         ISURBAN: 13 #>         ISOILWATER: 14 #>         HYBRID_OPT: -1 #>         ETAC: 0"},{"path":"https://schuch666.github.io/eva3dm/reference/overlay.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot or add points using a color scale — overlay","title":"Plot or add points using a color scale — overlay","text":"Custon plot SpatRaster (terra R-package) object based terra package","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/overlay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot or add points using a color scale — overlay","text":"","code":"overlay(   p,   z,   col,   col2,   lim = range(z, na.rm = TRUE),   symmetry = TRUE,   pch = 19,   pch2 = 1,   cex = 1,   cex2 = 1.2 * cex,   outside = TRUE,   add = FALSE,   plg = list(tic = \"none\", shrink = 1),   pax = list(),   expand = 1.15,   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/overlay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot or add points using a color scale — overlay","text":"p SpatVector points z column name vector values plot col color point col2 color outline lim range values scale symmetry calculate symmetrical scale pch type point pch2 type point contour cex character expansion points cex2 character expansion contour outside include values outside range add add existing plot plg list parameters passed terra::add_legend pax list parameters passed graphics::axis expand expand plot region ... arguments passing terra::plot","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/overlay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot or add points using a color scale — overlay","text":"return value","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/overlay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot or add points using a color scale — overlay","text":"","code":"sp<- terra::vect(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/masp.shp\")) BR<- terra::vect(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/BR.shp\"))  p    <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),\"/sites_AQ_BR.Rds\")) p$id      <- row.names(p) point     <- terra::vect(p) point$NMB <- 1:45 - 20 # some values to plot  terra::plot(BR, main = 'add points',xlim = c(-52,-37),ylim = c(-25,-18)) terra::lines(BR) terra::lines(sp, col = 'gray') overlay(point,point$NMB,cex = 1.4, add = TRUE)   overlay(point,point$NMB,cex = 1.4, add = FALSE, main = 'new plot') terra::lines(BR) terra::lines(sp, col = 'gray')"},{"path":"https://schuch666.github.io/eva3dm/reference/plot_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the difference from two SpatRaster objects — plot_diff","title":"Plot the difference from two SpatRaster objects — plot_diff","text":"Custom difference (x - y) plots SpatRaster object (based terra package)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/plot_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the difference from two SpatRaster objects — plot_diff","text":"","code":"plot_diff(   x,   y,   col,   absolute = TRUE,   relative = TRUE,   lim_1 = NA,   lim_2 = NA,   unit = c(units(x), expression(\"%\")),   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/plot_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the difference from two SpatRaster objects — plot_diff","text":"x SpatVector points y values plot col color absolute plot absolute difference relative plot relative difference lim_1 range values scale lim_2 calculate symmetrical scale unit annotation units ... arguments passing plot_raster","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/plot_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the difference from two SpatRaster objects — plot_diff","text":"return value","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/plot_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the difference from two SpatRaster objects — plot_diff","text":"","code":"folder <- system.file(\"extdata\",package=\"eva3dm\") wrf    <- paste0(folder,\"/wrfinput_d01\") A      <- wrf_rast(wrf,'XLAT') terra::units(A) <- 'degrees' B      <- wrf_rast(wrf,'XLONG') plot_diff(A,B,int = 2)"},{"path":"https://schuch666.github.io/eva3dm/reference/plot_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot rast (SpatRaster) object — plot_rast","title":"Plot rast (SpatRaster) object — plot_rast","text":"Custon plot SpatRaster (terra R-package) object based terra package","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/plot_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot rast (SpatRaster) object — plot_rast","text":"","code":"plot_rast(   r,   color,   ncolor = 21,   proj = FALSE,   plg = list(tic = \"none\", shrink = 1),   pax = list(),   latitude = TRUE,   longitude = TRUE,   int = 10,   grid = FALSE,   grid_int = int,   grid_col = \"#666666\",   add_range = FALSE,   ndig = 2,   log = FALSE,   range,   min = -3,   max,   unit,   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/plot_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot rast (SpatRaster) object — plot_rast","text":"r raster color color scale, name custom color scale (see notes) ncolor number colors proj TRUE project raster lat-lon plg list parameters passed terra::add_legend pax list parameters passed graphics::axis latitude add latitude axis longitude add longitude axis int interval latitude longitude lines grid add grid (graticule style) grid_int interval grid lines grid_col color grid lines add_range add legend max, average min r values ndig number digits legend_range log TRUE plot log-scale range range original values plot min minimum log value log scale (defoul -3) max maximum log value log scale unit title color bar (defoult ) ... arguments passing terra::plot","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/plot_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot rast (SpatRaster) object — plot_rast","text":"return value","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/plot_rast.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot rast (SpatRaster) object — plot_rast","text":"color scales including: 'eva3', 'eva4', 'blues', 'diff', 'rain'. Also reverse version addition r ('eva3r' default).","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/plot_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot rast (SpatRaster) object — plot_rast","text":"","code":"wrf <- paste(system.file(\"extdata\", package = \"eva3dm\"),                          \"/wrfinput_d01\", sep=\"\")  r <- wrf_rast(file=wrf, name='XLAT')  plot_rast(r)"},{"path":"https://schuch666.github.io/eva3dm/reference/q2rh.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert absolute humidity to relative humidity — q2rh","title":"Convert absolute humidity to relative humidity — q2rh","text":"function convert absolute humidity relative humidity.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/q2rh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert absolute humidity to relative humidity — q2rh","text":"","code":"q2rh(q, t = 15, p = 101325)"},{"path":"https://schuch666.github.io/eva3dm/reference/q2rh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert absolute humidity to relative humidity — q2rh","text":"q vector (data.frame) absolute humidity (g/Kg) t vector (data.frame) temperature (Celcius) p vector (data.frame) pressure (Pa)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/q2rh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert absolute humidity to relative humidity — q2rh","text":"vector data.frame time relative humidity, units ","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/q2rh.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert absolute humidity to relative humidity — q2rh","text":"default values standard atmosphere (288.15 K (15C) / 101325 Pa) rh temp arguments data.frame, need number lines columns, first column (time column) ignored.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/q2rh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert absolute humidity to relative humidity — q2rh","text":"","code":"# for a single value (or same length vectors) q2rh(q = 0.0002038, t = 29.3, p = 100800) #> [1] 80.76917  # using all data.frames times <- seq(as.POSIXct('2024-01-01',tz = 'UTC'),              as.POSIXct('2024-01-02',tz = 'UTC'),              by = 'hour')[1:5] q2   <- data.frame(time = times, a = rep(0.0002038,5)) temp <- data.frame(time = times, a = rep(     29.3,5)) pres <- data.frame(time = times, a = rep(   100800,5)) q2rh(q = q2, t = temp, p = pres) #>                  time        a #> 1 2024-01-01 00:00:00 80.76917 #> 2 2024-01-01 01:00:00 80.76917 #> 3 2024-01-01 02:00:00 80.76917 #> 4 2024-01-01 03:00:00 80.76917 #> 5 2024-01-01 04:00:00 80.76917  # using data.frame for q and t (p is cte.) q2rh(q = q2, t = temp, p = 100000) #>                  time        a #> 1 2024-01-01 00:00:00 80.12815 #> 2 2024-01-01 01:00:00 80.12815 #> 3 2024-01-01 02:00:00 80.12815 #> 4 2024-01-01 03:00:00 80.12815 #> 5 2024-01-01 04:00:00 80.12815  # using data.frame for q and p (t is cte.) q2rh(q = q2, t = 26, p = pres) #>                  time        a #> 1 2024-01-01 00:00:00 97.96308 #> 2 2024-01-01 01:00:00 97.96308 #> 3 2024-01-01 02:00:00 97.96308 #> 4 2024-01-01 03:00:00 97.96308 #> 5 2024-01-01 04:00:00 97.96308  # using data.frame only for q (p and t are cte.) q2rh(q = q2, t = 26, p = 100000) #>                  time       a #> 1 2024-01-01 00:00:00 97.1856 #> 2 2024-01-01 01:00:00 97.1856 #> 3 2024-01-01 02:00:00 97.1856 #> 4 2024-01-01 03:00:00 97.1856 #> 5 2024-01-01 04:00:00 97.1856"},{"path":"https://schuch666.github.io/eva3dm/reference/rain.html","id":null,"dir":"Reference","previous_headings":"","what":"conversion of model precipitation to hourly precipitation — rain","title":"conversion of model precipitation to hourly precipitation — rain","text":"function converts model accumulated precipitation hourly precipitation.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"conversion of model precipitation to hourly precipitation — rain","text":"","code":"rain(rainc, rainnc, verbose = TRUE)"},{"path":"https://schuch666.github.io/eva3dm/reference/rain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"conversion of model precipitation to hourly precipitation — rain","text":"rainc data.frame SpatRaster RAINC variable rainnc data.frame SpatRaster RAINNC variable verbose set TRUE display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"conversion of model precipitation to hourly precipitation — rain","text":"data.frame time hourly precipitation SpatRaster hourly precipitation","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"conversion of model precipitation to hourly precipitation — rain","text":"","code":"times <- seq(as.POSIXct('2024-01-01',tz = 'UTC'),              as.POSIXct('2024-01-01 04:00:00',tz = 'UTC'),              by = 'hour') RNC   <- data.frame(date = times, aa = c(0.149,0.149,0.149,0.149,0.149)) RNNC  <- data.frame(date = times, aa = c(0.919,1.0,1.1,1.1,2.919)) rain(rainc = RNC, rainnc = RNNC) #>                  date    aa #> 1 2024-01-01 00:00:00    NA #> 2 2024-01-01 01:00:00 0.081 #> 3 2024-01-01 02:00:00 0.100 #> 4 2024-01-01 03:00:00 0.000 #> 5 2024-01-01 04:00:00 1.819"},{"path":"https://schuch666.github.io/eva3dm/reference/rast_to_netcdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to convert/save a SpatRaster array/Netcdf — rast_to_netcdf","title":"Function to convert/save a SpatRaster array/Netcdf — rast_to_netcdf","text":"Conversion SpatRaster array optionally save existing Netcdf File.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rast_to_netcdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to convert/save a SpatRaster array/Netcdf — rast_to_netcdf","text":"","code":"rast_to_netcdf(r, file, name, unit = units(r), XY = FALSE, verbose = TRUE)"},{"path":"https://schuch666.github.io/eva3dm/reference/rast_to_netcdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to convert/save a SpatRaster array/Netcdf — rast_to_netcdf","text":"r SpatRaster object file Netcdf file name name variable name Netcdf file unit unit variable (set NA change unit) XY set true MemoryOrder XY (file missing) verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rast_to_netcdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to convert/save a SpatRaster array/Netcdf — rast_to_netcdf","text":"numerical array","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rast_to_netcdf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Function to convert/save a SpatRaster array/Netcdf — rast_to_netcdf","text":"eva3dm::wrf_rast support 3d SpatRaster, case 4d variable use approach save file.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rast_to_netcdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to convert/save a SpatRaster array/Netcdf — rast_to_netcdf","text":"","code":"folder   <- system.file(\"extdata\",package=\"eva3dm\") wrf_file <- paste0(folder,\"/wrf.day1.o3.nc\")  Rast     <- wrf_rast(wrf_file,'o3') A        <- rast_to_netcdf(Rast)"},{"path":"https://schuch666.github.io/eva3dm/reference/read_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to read stats and evaluation — read_stat","title":"Function to read stats and evaluation — read_stat","text":"Function read stats evaluation output","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/read_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to read stats and evaluation — read_stat","text":"","code":"read_stat(file, sep = \";\", dec = \".\", verbose = FALSE, ...)"},{"path":"https://schuch666.github.io/eva3dm/reference/read_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to read stats and evaluation — read_stat","text":"file model data.frame sep field separator string, passed read.table function dec string use decimal points, passed read.table function verbose display additional information ... arguments passed read.table functions","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/read_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to read stats and evaluation — read_stat","text":"return value","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/read_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to read stats and evaluation — read_stat","text":"","code":"sample <- read_stat(file    = paste0(system.file(\"extdata\", package = \"eva3dm\"),\"/sample.txt\"),                     verbose = TRUE) #> reading /home/runner/work/_temp/Library/eva3dm/extdata/sample.txt   sample <- read_stat(file    = paste0(system.file(\"extdata\", package = \"eva3dm\"),\"/sample.csv\"),                     verbose = TRUE) #> reading /home/runner/work/_temp/Library/eva3dm/extdata/sample.csv"},{"path":"https://schuch666.github.io/eva3dm/reference/rh2q.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert relative humidity to absolute humidity — rh2q","title":"Convert relative humidity to absolute humidity — rh2q","text":"function convert humidity absolute humidity using Tetens formula, assuming standard atmosphere conditions.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rh2q.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert relative humidity to absolute humidity — rh2q","text":"","code":"rh2q(rh, temp = 15)"},{"path":"https://schuch666.github.io/eva3dm/reference/rh2q.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert relative humidity to absolute humidity — rh2q","text":"rh vector (data.frame) relative humidity (percentage) temp vector (data.frame) temperature (Celsius)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rh2q.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert relative humidity to absolute humidity — rh2q","text":"value data.frame time absolute humidity, units g/g","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rh2q.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Convert relative humidity to absolute humidity — rh2q","text":"default values standard atmosphere (288.15 K / 15 C) rh temp arguments data.frame, need number lines columns, first column (time column) ignored.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/rh2q.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert relative humidity to absolute humidity — rh2q","text":"","code":"# for a singfle value rh2q(rh = 99, temp = 25) #> [1] 0.0202236  # vector of rh values rh2q(rh = c(0,seq(1,100, by = 4)), temp = 25) #>  [1] 0.0000000000 0.0002042788 0.0010213938 0.0018385089 0.0026556240 #>  [6] 0.0034727390 0.0042898541 0.0051069692 0.0059240843 0.0067411993 #> [11] 0.0075583144 0.0083754295 0.0091925445 0.0100096596 0.0108267747 #> [16] 0.0116438897 0.0124610048 0.0132781199 0.0140952350 0.0149123500 #> [21] 0.0157294651 0.0165465802 0.0173636952 0.0181808103 0.0189979254 #> [26] 0.0198150404  # vector of values for rh and temp rh2q(rh = c(0,seq(1,100, by = 4)), temp = 10:35) #>  [1] 0.000000e+00 8.348345e-05 4.462669e-04 8.583979e-04 1.324373e-03 #>  [6] 1.849004e-03 2.437438e-03 3.095175e-03 3.828085e-03 4.642429e-03 #> [11] 5.544880e-03 6.542546e-03 7.642986e-03 8.854241e-03 1.018485e-02 #> [16] 1.164389e-02 1.324097e-02 1.498631e-02 1.689070e-02 1.896560e-02 #> [21] 2.122310e-02 2.367603e-02 2.633791e-02 2.922304e-02 3.234651e-02 #> [26] 3.572424e-02  # rh is data.frame and temp is a value times <- seq(as.POSIXct('2024-01-01',tz = 'UTC'),              as.POSIXct('2024-01-02',tz = 'UTC'),              by = 'hour') rh2q(rh   = data.frame(time = times, a = seq(1,100, by = 4)),temp = 25) #>                   time            a #> 1  2024-01-01 00:00:00 0.0002042788 #> 2  2024-01-01 01:00:00 0.0010213938 #> 3  2024-01-01 02:00:00 0.0018385089 #> 4  2024-01-01 03:00:00 0.0026556240 #> 5  2024-01-01 04:00:00 0.0034727390 #> 6  2024-01-01 05:00:00 0.0042898541 #> 7  2024-01-01 06:00:00 0.0051069692 #> 8  2024-01-01 07:00:00 0.0059240843 #> 9  2024-01-01 08:00:00 0.0067411993 #> 10 2024-01-01 09:00:00 0.0075583144 #> 11 2024-01-01 10:00:00 0.0083754295 #> 12 2024-01-01 11:00:00 0.0091925445 #> 13 2024-01-01 12:00:00 0.0100096596 #> 14 2024-01-01 13:00:00 0.0108267747 #> 15 2024-01-01 14:00:00 0.0116438897 #> 16 2024-01-01 15:00:00 0.0124610048 #> 17 2024-01-01 16:00:00 0.0132781199 #> 18 2024-01-01 17:00:00 0.0140952350 #> 19 2024-01-01 18:00:00 0.0149123500 #> 20 2024-01-01 19:00:00 0.0157294651 #> 21 2024-01-01 20:00:00 0.0165465802 #> 22 2024-01-01 21:00:00 0.0173636952 #> 23 2024-01-01 22:00:00 0.0181808103 #> 24 2024-01-01 23:00:00 0.0189979254 #> 25 2024-01-02 00:00:00 0.0198150404  # using both rh and temp are data.frames rh2q(rh   = data.frame(time = times, a = seq(1,100, by = 4)),      temp = data.frame(time = times, a = 11:35)) #>                   time            a #> 1  2024-01-01 00:00:00 8.348345e-05 #> 2  2024-01-01 01:00:00 4.462669e-04 #> 3  2024-01-01 02:00:00 8.583979e-04 #> 4  2024-01-01 03:00:00 1.324373e-03 #> 5  2024-01-01 04:00:00 1.849004e-03 #> 6  2024-01-01 05:00:00 2.437438e-03 #> 7  2024-01-01 06:00:00 3.095175e-03 #> 8  2024-01-01 07:00:00 3.828085e-03 #> 9  2024-01-01 08:00:00 4.642429e-03 #> 10 2024-01-01 09:00:00 5.544880e-03 #> 11 2024-01-01 10:00:00 6.542546e-03 #> 12 2024-01-01 11:00:00 7.642986e-03 #> 13 2024-01-01 12:00:00 8.854241e-03 #> 14 2024-01-01 13:00:00 1.018485e-02 #> 15 2024-01-01 14:00:00 1.164389e-02 #> 16 2024-01-01 15:00:00 1.324097e-02 #> 17 2024-01-01 16:00:00 1.498631e-02 #> 18 2024-01-01 17:00:00 1.689070e-02 #> 19 2024-01-01 18:00:00 1.896560e-02 #> 20 2024-01-01 19:00:00 2.122310e-02 #> 21 2024-01-01 20:00:00 2.367603e-02 #> 22 2024-01-01 21:00:00 2.633791e-02 #> 23 2024-01-01 22:00:00 2.922304e-02 #> 24 2024-01-01 23:00:00 3.234651e-02 #> 25 2024-01-02 00:00:00 3.572424e-02"},{"path":"https://schuch666.github.io/eva3dm/reference/sat.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to model evaluation using satellite — sat","title":"Functions to model evaluation using satellite — sat","text":"functions evaluate spatial performance using satellite","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/sat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to model evaluation using satellite — sat","text":"","code":"sat(   mo,   ob,   rname,   table = NULL,   n = 6,   min = NA,   max = NA,   method = \"bilinear\",   eval_function = stat,   mask,   skip_interp = FALSE,   verbose = TRUE,   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/sat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to model evaluation using satellite — sat","text":"mo SpatRaster raster model ob SpatRaster raster observations rname passed stat table data.frame append results n number points boundary removed, default 5 min minimum value cutoff max maximum value cutoff method passed terra::resample eval_function evaluation function (default stat) mask optional SpatVector mask results skip_interp skip interpolation step verbose set TRUE display additional information ... arguments passed stat","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/sat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to model evaluation using satellite — sat","text":"data.frame","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/sat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Functions to model evaluation using satellite — sat","text":"DIED error message appears, means removing valid values using arguments min max. cate() used eval_function, argument threshold must included (see example).","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/sat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to model evaluation using satellite — sat","text":"","code":"model_no2 <- terra::rast(paste0(system.file(\"extdata\",package=\"eva3dm\"),                               \"/camx_no2.Rds\")) omi_no2   <- terra::rast(paste0(system.file(\"extdata\",package=\"eva3dm\"),                               \"/omi_no2.Rds\"))  # generate the statistical indexes sat(mo = model_no2,ob = omi_no2,rname = 'NO2_statistical') #> removing 6 points for the model (mo) lateral boundaryes ... #> interpolating obsservation (ob) to model grid (mo) ... #>                     n      Obs      Sim         r       IOA       FA2    RMSE #> NO2_statistical 11664 3.334283 4.267475 0.4689121 0.3358893 0.6685528 4.98183 #>                        MB       ME  NMB (%)  NME (%) #> NO2_statistical 0.9331919 2.165081 27.98778 64.93393  # generate categorical evaluation using 3.0 as threshold sat(mo = model_no2,ob = omi_no2,rname = 'NO2_categorical',     eval_function = cate, threshold = 3.0) #> removing 6 points for the model (mo) lateral boundaryes ... #> interpolating obsservation (ob) to model grid (mo) ... #>                     n      Obs      Sim thr        A      CSI      POD        B #> NO2_categorical 11664 3.334283 4.267475   3 83.04184 69.81074 85.49533 107.9626 #>                      FAR      HSS      PSS #> NO2_categorical 20.81025 66.05674 66.45827  # customizing the evaluation function: inclusion of p.value from stats::cor.test() stat_p <- function(x, y, ...){   table         <- eva3dm::stat(x, y, ...)   cor.result    <- stats::cor.test(x, y, ... )   table$p.value <- cor.result$p.value   table         <- table[,c(1:4,12,5:11)]   return(table) }  sat(mo = model_no2,ob = omi_no2,rname = 'NO2_statistical_with_p',eval_function = stat_p) #> removing 6 points for the model (mo) lateral boundaryes ... #> interpolating obsservation (ob) to model grid (mo) ... #>                            n      Obs      Sim         r p.value       IOA #> NO2_statistical_with_p 11664 3.334283 4.267475 0.4689121       0 0.3358893 #>                              FA2    RMSE        MB       ME  NMB (%)  NME (%) #> NO2_statistical_with_p 0.6685528 4.98183 0.9331919 2.165081 27.98778 64.93393"},{"path":"https://schuch666.github.io/eva3dm/reference/select.html","id":null,"dir":"Reference","previous_headings":"","what":"Selection from data.frames with time-series — select","title":"Selection from data.frames with time-series — select","text":"Utility function select periods data.frame. function inspired openair::selectByDate.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selection from data.frames with time-series — select","text":"","code":"select(   data,   year,   month,   day,   hour,   minutes,   seconds,   start,   end,   range,   time = \"date\" )"},{"path":"https://schuch666.github.io/eva3dm/reference/select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selection from data.frames with time-series — select","text":"data data.frame model observation data year numeric vector selection month numeric vector (1-12) selection, can abbreviated 3 letters day numeric vector (1-31) selection, weekdays can abbreviated 3 letters, weekday/weekend hour numeric vector (0-23) selection minutes numeric vector (0-60) selection seconds numeric vector (0-60) selection start POSIXct character (YYYY-MM-DD) initial date selection end POSIXct character (YYYY-MM-DD) initial date selection range pair start/end data.frame time (default \"date\") time name column time (default \"date\")","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selection from data.frames with time-series — select","text":"data.frame","code":""},{"path":[]},{"path":"https://schuch666.github.io/eva3dm/reference/select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selection from data.frames with time-series — select","text":"","code":"model <- readRDS(paste0(system.file(\"extdata\",package=\"eva3dm\"),                         \"/model.Rds\")) summary(model) #>       date                       Americana            SAndre       #>  Min.   :2012-01-01 03:00:00   Min.   : 0.01627   Min.   : 1.590   #>  1st Qu.:2012-01-03 14:45:00   1st Qu.: 7.88818   1st Qu.: 6.925   #>  Median :2012-01-06 02:30:00   Median :15.78057   Median :13.457   #>  Mean   :2012-01-06 02:30:00   Mean   :17.60491   Mean   :15.202   #>  3rd Qu.:2012-01-08 14:15:00   3rd Qu.:25.95062   3rd Qu.:21.911   #>  Max.   :2012-01-11 02:00:00   Max.   :48.18681   Max.   :42.690   #>      VVIbes       #>  Min.   : 4.747   #>  1st Qu.: 5.879   #>  Median : 6.560   #>  Mean   : 6.944   #>  3rd Qu.: 7.432   #>  Max.   :13.101   summary(select(data = model, start = '2012-01-09')) #>       date                       Americana          SAndre       #>  Min.   :2012-01-09 00:00:00   Min.   : 3.747   Min.   : 3.107   #>  1st Qu.:2012-01-09 12:30:00   1st Qu.: 8.059   1st Qu.: 6.955   #>  Median :2012-01-10 01:00:00   Median :11.974   Median :12.879   #>  Mean   :2012-01-10 01:00:00   Mean   :11.406   Mean   :13.981   #>  3rd Qu.:2012-01-10 13:30:00   3rd Qu.:14.773   3rd Qu.:21.443   #>  Max.   :2012-01-11 02:00:00   Max.   :19.086   Max.   :25.160   #>      VVIbes      #>  Min.   :4.747   #>  1st Qu.:5.834   #>  Median :6.236   #>  Mean   :6.197   #>  3rd Qu.:6.645   #>  Max.   :7.078   summary(select(data = model, start = '2012-01-05', end  = '2012-01-09')) #>       date              Americana          SAndre           VVIbes       #>  Min.   :2012-01-05   Min.   : 2.708   Min.   : 4.335   Min.   : 5.477   #>  1st Qu.:2012-01-06   1st Qu.:11.178   1st Qu.:11.182   1st Qu.: 6.216   #>  Median :2012-01-07   Median :19.282   Median :15.699   Median : 6.848   #>  Mean   :2012-01-07   Mean   :20.769   Mean   :19.460   Mean   : 7.169   #>  3rd Qu.:2012-01-08   3rd Qu.:29.308   3rd Qu.:26.869   3rd Qu.: 7.729   #>  Max.   :2012-01-09   Max.   :48.187   Max.   :42.690   Max.   :10.365   summary(select(data = model, day  = 6)) #>       date                       Americana          SAndre       #>  Min.   :2012-01-06 00:00:00   Min.   : 6.752   Min.   : 4.717   #>  1st Qu.:2012-01-06 05:45:00   1st Qu.:13.505   1st Qu.:10.566   #>  Median :2012-01-06 11:30:00   Median :17.723   Median :18.253   #>  Mean   :2012-01-06 11:30:00   Mean   :18.047   Mean   :21.145   #>  3rd Qu.:2012-01-06 17:15:00   3rd Qu.:21.546   3rd Qu.:33.314   #>  Max.   :2012-01-06 23:00:00   Max.   :32.813   Max.   :40.066   #>      VVIbes      #>  Min.   :5.770   #>  1st Qu.:5.888   #>  Median :6.437   #>  Mean   :6.379   #>  3rd Qu.:6.715   #>  Max.   :7.065   summary(select(data = model, hour = 12)) #>       date                       Americana         SAndre          VVIbes       #>  Min.   :2012-01-01 12:00:00   Min.   :12.56   Min.   :15.23   Min.   : 5.812   #>  1st Qu.:2012-01-03 18:00:00   1st Qu.:16.59   1st Qu.:17.39   1st Qu.: 6.651   #>  Median :2012-01-06 00:00:00   Median :25.41   Median :20.25   Median : 6.731   #>  Mean   :2012-01-06 00:00:00   Mean   :24.89   Mean   :21.76   Mean   : 7.182   #>  3rd Qu.:2012-01-08 06:00:00   3rd Qu.:32.72   3rd Qu.:26.79   3rd Qu.: 7.285   #>  Max.   :2012-01-10 12:00:00   Max.   :38.08   Max.   :30.54   Max.   :10.191   summary(select(data = model, day = 6, hour = 12)) #>       date                       Americana         SAndre         VVIbes      #>  Min.   :2012-01-06 12:00:00   Min.   :15.04   Min.   :30.1   Min.   :6.657   #>  1st Qu.:2012-01-06 12:00:00   1st Qu.:15.04   1st Qu.:30.1   1st Qu.:6.657   #>  Median :2012-01-06 12:00:00   Median :15.04   Median :30.1   Median :6.657   #>  Mean   :2012-01-06 12:00:00   Mean   :15.04   Mean   :30.1   Mean   :6.657   #>  3rd Qu.:2012-01-06 12:00:00   3rd Qu.:15.04   3rd Qu.:30.1   3rd Qu.:6.657   #>  Max.   :2012-01-06 12:00:00   Max.   :15.04   Max.   :30.1   Max.   :6.657   summary(select(data = model, day  = 'weekday')) #>       date                       Americana            SAndre       #>  Min.   :2012-01-02 00:00:00   Min.   : 0.01627   Min.   : 1.590   #>  1st Qu.:2012-01-03 18:30:00   1st Qu.: 8.01003   1st Qu.: 6.112   #>  Median :2012-01-05 13:00:00   Median :14.70766   Median :13.017   #>  Mean   :2012-01-06 03:18:56   Mean   :16.78762   Mean   :15.391   #>  3rd Qu.:2012-01-09 07:30:00   3rd Qu.:25.95556   3rd Qu.:23.190   #>  Max.   :2012-01-11 02:00:00   Max.   :44.27197   Max.   :42.690   #>      VVIbes       #>  Min.   : 4.747   #>  1st Qu.: 5.861   #>  Median : 6.585   #>  Mean   : 7.113   #>  3rd Qu.: 7.860   #>  Max.   :13.101   summary(select(data = model, day  = 'weekend')) #>       date                       Americana          SAndre       #>  Min.   :2012-01-01 03:00:00   Min.   : 1.208   Min.   : 1.671   #>  1st Qu.:2012-01-01 20:00:00   1st Qu.: 7.392   1st Qu.: 8.799   #>  Median :2012-01-07 13:00:00   Median :21.959   Median :14.428   #>  Mean   :2012-01-06 00:28:41   Mean   :19.630   Mean   :14.731   #>  3rd Qu.:2012-01-08 06:00:00   3rd Qu.:25.880   3rd Qu.:16.456   #>  Max.   :2012-01-08 23:00:00   Max.   :48.187   Max.   :39.050   #>      VVIbes      #>  Min.   :5.186   #>  1st Qu.:5.931   #>  Median :6.435   #>  Mean   :6.526   #>  3rd Qu.:7.024   #>  Max.   :8.159   summary(select(data = model, day  = 'tue')) #>       date                       Americana            SAndre       #>  Min.   :2012-01-03 00:00:00   Min.   : 0.01627   Min.   : 3.107   #>  1st Qu.:2012-01-03 11:45:00   1st Qu.: 5.51820   1st Qu.: 4.868   #>  Median :2012-01-06 23:30:00   Median :12.42998   Median :14.119   #>  Mean   :2012-01-06 23:30:00   Mean   :13.54270   Mean   :14.208   #>  3rd Qu.:2012-01-10 11:15:00   3rd Qu.:17.70296   3rd Qu.:23.497   #>  Max.   :2012-01-10 23:00:00   Max.   :37.74826   Max.   :26.597   #>      VVIbes      #>  Min.   :5.396   #>  1st Qu.:5.828   #>  Median :6.199   #>  Mean   :6.514   #>  3rd Qu.:6.691   #>  Max.   :8.836   summary(select(data = model, day  = 'jan')) #>       date       Americana       SAndre        VVIbes    #>  Min.   :NA    Min.   : NA   Min.   : NA   Min.   : NA   #>  1st Qu.:NA    1st Qu.: NA   1st Qu.: NA   1st Qu.: NA   #>  Median :NA    Median : NA   Median : NA   Median : NA   #>  Mean   :NaN   Mean   :NaN   Mean   :NaN   Mean   :NaN   #>  3rd Qu.:NA    3rd Qu.: NA   3rd Qu.: NA   3rd Qu.: NA   #>  Max.   :NA    Max.   : NA   Max.   : NA   Max.   : NA"},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate evaluation statistics from numerical vectors — stat","title":"Calculate evaluation statistics from numerical vectors — stat","text":"Calculate statistical indexes (Number pairs, observation average, model average, correlation, Index Agreement, Factor 2, Root Mean Square Error, Mean Bias, Mean error, Normalized Mean Bias, Normalized Mean Bias) model evaluation","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate evaluation statistics from numerical vectors — stat","text":"","code":"stat(   model,   observation,   wd = FALSE,   cutoff = NA,   cutoff_NME = NA,   nobs = 8,   rname,   verbose = TRUE )"},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate evaluation statistics from numerical vectors — stat","text":"model numeric vector paired model data observation numeric vector paired observation data wd logical, set true apply rotation wind direction, see notes cutoff (optionally maximum) valid value observation cutoff_NME (optionally maximum) valid value observation NME, MFB MFE nobs minimum number observations rname row name verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate evaluation statistics from numerical vectors — stat","text":"data.frame calculated Number pairs, observation average, model average, correlation, Index Agreement, Factor 2, Root Mean Square Error, Mean Bias, Mean error, Normalized Mean Bias, Normalized Mean Bias","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate evaluation statistics from numerical vectors — stat","text":"option wd = TRUE applies rotation 360 model wind direction minimize angular difference.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate evaluation statistics from numerical vectors — stat","text":"Emery, C. Tai., E. 2001. Enhanced Meteorological Modeling Performance Evaluation Two Texas Ozone Episodes. Monk, K. et al. 2019. Evaluation Regional Air Quality Models Sydney Australia: Part 1—Meteorological Model Comparison. Atmosphere 10(7), p. 374. doi: 10.3390/atmos10070374. Ramboll. 2018. PacWest Newport Meteorological Performance Evaluation. Zhang, Y. et al. 2019. Multiscale Applications Two Online-Coupled Meteorology-Chemistry Models Recent Field Campaigns Australia, Part : Model Description WRF/Chem-ROMS Evaluation Using Surface Satellite Data Sensitivity Spatial Grid Resolutions. Atmosphere 10(4), p. 189. doi: 10.3390/atmos10040189. Emery, C., Liu, Z., Russell, .G., Odman, M.T., Yarwood, G. Kumar, N. 2017. Recommendations statistics benchmarks assess photochemical model performance. Journal Air & Waste Management Association 67(5), pp. 582–598. doi: 10.1080/10962247.2016.1265027. Zhai, H., Huang, L., Emery, C., Zhang, X., Wang, Y., Yarwood, G., ... & Li, L. (2024). Recommendations benchmarks photochemical air quality model applications China—NO2, SO2, CO PM10. Atmospheric Environment, 319, 120290.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate evaluation statistics from numerical vectors — stat","text":"","code":"model <- 1:100 data  <- model + rnorm(100,0.2) stat(model = model, observation = data) #>     n      Obs  Sim         r       IOA  FA2    RMSE         MB       ME #> 1 100 50.79421 50.5 0.9992839 0.9996105 0.99 1.14183 -0.2942089 0.921157 #>      NMB (%)  NME (%) #> 1 -0.5792175 1.813508"},{"path":"https://schuch666.github.io/eva3dm/reference/template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create templates for model evaluation — template","title":"Create templates for model evaluation — template","text":"Create templates code (r-scripts bash job-submission script) read, post-process evaluate model results.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create templates for model evaluation — template","text":"","code":"template(   root,   template = \"WRF\",   case = \"case\",   env = \"rspatial\",   scheduler = \"SBATCH\",   partition = \"main\",   project = \"PROJECT\",   verbose = TRUE )"},{"path":"https://schuch666.github.io/eva3dm/reference/template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create templates for model evaluation — template","text":"root directory create template template template type (see notes) case case evaluated env name conda environment scheduler job scheduler used (SBATCH PBS) partition partition name project project name verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create templates for model evaluation — template","text":"value returned, create folders template scripts","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/template.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create templates for model evaluation — template","text":"Templates types available:  - WRF (model post-process METAR + INMET)  - WRF-Chem (model post-process METAR, AQS Brazil AERONET)  - EXP (model post-process one experimental site including PBL variables)  - METAR (download METAR observations )  - MET (evaluation meteorology)  - AQ (evaluation air quality)  - PSA (model post-processing CDO satellite evaluation)  - SAT (evaluation precipitation using GPCP satellite)  - AQS_BR (download data air quality stations Sao Paulo Rio de Janeiro)  - INMET (pre-processing automatic conventional meteorological data INMET)  - merge (merge INMET data merge METAR data)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/template.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create templates for model evaluation — template","text":"","code":"temp <- file.path(tempdir(),\"POST\") template(root = temp,template = 'WRF', case = 'WRF-only') #>  folder  /tmp/RtmpfxF4nR/POST/WRF/WRF-only : link wrf output files here! #>  bash  /tmp/RtmpfxF4nR/POST/post-R_wrf.sh : post processing job script #>  r-script /tmp/RtmpfxF4nR/POST/extract_metar.R : source code to extract metar using eva3dm::extract_serie() #>  r-script /tmp/RtmpfxF4nR/POST/extract_inmet.R : source code to extract inmet using eva3dm::extract_serie()"},{"path":"https://schuch666.github.io/eva3dm/reference/uv2wd.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate model wind direction — uv2wd","title":"Function to calculate model wind direction — uv2wd","text":"Function calculate model wind direction","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/uv2wd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate model wind direction — uv2wd","text":"","code":"uv2wd(u, v, verbose = TRUE)"},{"path":"https://schuch666.github.io/eva3dm/reference/uv2wd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate model wind direction — uv2wd","text":"u data.frame model time-series U10 v data.frame model time-series V10 verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/uv2wd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate model wind direction — uv2wd","text":"vector data.frame time wind direction, units degree north","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/uv2wd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to calculate model wind direction — uv2wd","text":"","code":"times <- seq(as.POSIXct('2024-01-01',tz = 'UTC'),              as.POSIXct('2024-01-02',tz = 'UTC'),              by = 'hour') U10 = data.frame(times = times,                  test1 = c(3.29,2.07,1.96,2.82,3.73,                            4.11,4.96,6.33,7.39,7.59,                            7.51,7.22,6.81,6.43,5.81,                            4.02,3.03,2.68,2.40,2.20,                            2.09,1.95,1.66,1.39,1.4),                  test2 = c(6.29,4.87,6.16,7.12,8.77,                            10.16,10.85,11.45,11.21,11.04,                            11.09,10.67,10.48,10.00,8.96,                            6.36,5.62,5.83,5.83,5.25,                            4.11,3.08,2.26,1.14,-0.10)) V10 = data.frame(times = times,                  test1 = c(-8.87,-4.23,-2.81,-2.59,-4.58,                            -4.80,-5.33,-5.86,-6.12,-6.13,                            -6.11,-5.76,-5.91,-5.60,-5.09,                            -3.33,-2.50,-2.29,-2.14,-2.07,                            -1.95,-1.97,-2.04,-2.03,-1.9),                  test2 = c(11.80,5.88,5.74,5.56,6.87,                            8.39,8.68,8.33,7.90,7.42,                            6.96,6.87,6.36,5.61,5.16,                            4.16,4.25,4.59,4.51,3.90,                            2.97,1.98,1.04,-0.08,-0.44))  uv2wd(u = U10, v = V10) #> calculating wind direction... #>                  times    test1     test2 #> 1  2024-01-01 00:00:00 339.6495 208.05988 #> 2  2024-01-01 01:00:00 333.9246 219.63262 #> 3  2024-01-01 02:00:00 325.1039 227.02136 #> 4  2024-01-01 03:00:00 312.5656 232.01376 #> 5  2024-01-01 04:00:00 320.8403 231.92654 #> 6  2024-01-01 05:00:00 319.4282 230.45054 #> 7  2024-01-01 06:00:00 317.0593 231.34019 #> 8  2024-01-01 07:00:00 312.7920 233.96370 #> 9  2024-01-01 08:00:00 309.6297 234.82658 #> 10 2024-01-01 09:00:00 308.9258 236.09490 #> 11 2024-01-01 10:00:00 309.1312 237.88793 #> 12 2024-01-01 11:00:00 308.5823 237.22408 #> 13 2024-01-01 12:00:00 310.9528 238.74768 #> 14 2024-01-01 13:00:00 311.0532 240.70757 #> 15 2024-01-01 14:00:00 311.2208 240.06267 #> 16 2024-01-01 15:00:00 309.6369 236.81178 #> 17 2024-01-01 16:00:00 309.5254 232.90242 #> 18 2024-01-01 17:00:00 310.5131 231.78639 #> 19 2024-01-01 18:00:00 311.7223 232.27500 #> 20 2024-01-01 19:00:00 313.2562 233.39293 #> 21 2024-01-01 20:00:00 313.0153 234.14708 #> 22 2024-01-01 21:00:00 315.2923 237.26477 #> 23 2024-01-01 22:00:00 320.8639 245.28920 #> 24 2024-01-01 23:00:00 325.5994 274.01418 #> 25 2024-01-02 00:00:00 323.6156  12.80427"},{"path":"https://schuch666.github.io/eva3dm/reference/uv2ws.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to calculate model wind speed — uv2ws","title":"Function to calculate model wind speed — uv2ws","text":"Function calculate model wind speed","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/uv2ws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to calculate model wind speed — uv2ws","text":"","code":"uv2ws(u, v, verbose = TRUE)"},{"path":"https://schuch666.github.io/eva3dm/reference/uv2ws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to calculate model wind speed — uv2ws","text":"u data.frame model time-series U10 v data.frame model time-series V10 verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/uv2ws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to calculate model wind speed — uv2ws","text":"vector data.frame time wind sped, units m/s","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/uv2ws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to calculate model wind speed — uv2ws","text":"","code":"times <- seq(as.POSIXct('2024-01-01',tz = 'UTC'),              as.POSIXct('2024-01-02',tz = 'UTC'),              by = 'hour')  U10 = data.frame(times = times,                  test1 = c(3.29,2.07,1.96,2.82,3.73,                            4.11,4.96,6.33,7.39,7.59,                            7.51,7.22,6.81,6.43,5.81,                            4.02,3.03,2.68,2.40,2.20,                            2.09,1.95,1.66,1.39,1.4),                  test2 = c(6.29,4.87,6.16,7.12,8.77,                            10.16,10.85,11.45,11.21,11.04,                            11.09,10.67,10.48,10.00,8.96,                            6.36,5.62,5.83,5.83,5.25,                            4.11,3.08,2.26,1.14,-0.10)) V10 = data.frame(times = times,                  test1 = c(-8.87,-4.23,-2.81,-2.59,-4.58,                            -4.80,-5.33,-5.86,-6.12,-6.13,                            -6.11,-5.76,-5.91,-5.60,-5.09,                            -3.33,-2.50,-2.29,-2.14,-2.07,                            -1.95,-1.97,-2.04,-2.03,-1.9),                  test2 = c(11.80,5.88,5.74,5.56,6.87,                            8.39,8.68,8.33,7.90,7.42,                            6.96,6.87,6.36,5.61,5.16,                            4.16,4.25,4.59,4.51,3.90,                            2.97,1.98,1.04,-0.08,-0.44))  uv2ws(u = U10, v = V10) #> calculating wind speed ... #>                  times    test1      test2 #> 1  2024-01-01 00:00:00 9.460497 13.3717650 #> 2  2024-01-01 01:00:00 4.709331  7.6348739 #> 3  2024-01-01 02:00:00 3.426033  8.4198100 #> 4  2024-01-01 03:00:00 3.828903  9.0337146 #> 5  2024-01-01 04:00:00 5.906717 11.1404578 #> 6  2024-01-01 05:00:00 6.319185 13.1764069 #> 7  2024-01-01 06:00:00 7.280831 13.8947796 #> 8  2024-01-01 07:00:00 8.626036 14.1594986 #> 9  2024-01-01 08:00:00 9.595129 13.7140111 #> 10 2024-01-01 09:00:00 9.756280 13.3018044 #> 11 2024-01-01 10:00:00 9.681539 13.0931165 #> 12 2024-01-01 11:00:00 9.236125 12.6903822 #> 13 2024-01-01 12:00:00 9.016884 12.2588743 #> 14 2024-01-01 13:00:00 8.526717 11.4661284 #> 15 2024-01-01 14:00:00 7.724260 10.3395938 #> 16 2024-01-01 15:00:00 5.220086  7.5996842 #> 17 2024-01-01 16:00:00 3.928218  7.0460556 #> 18 2024-01-01 17:00:00 3.525124  7.4200404 #> 19 2024-01-01 18:00:00 3.215525  7.3708208 #> 20 2024-01-01 19:00:00 3.020745  6.5400688 #> 21 2024-01-01 20:00:00 2.858426  5.0707988 #> 22 2024-01-01 21:00:00 2.771895  3.6615297 #> 23 2024-01-01 22:00:00 2.630057  2.4878103 #> 24 2024-01-01 23:00:00 2.460285  1.1428036 #> 25 2024-01-02 00:00:00 2.360085  0.4512206"},{"path":"https://schuch666.github.io/eva3dm/reference/vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to return variable names — vars","title":"Function to return variable names — vars","text":"Return variable names NetCDF","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to return variable names — vars","text":"","code":"vars(file = NA, action = \"get\", verbose = FALSE)"},{"path":"https://schuch666.github.io/eva3dm/reference/vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to return variable names — vars","text":"file file name action 'get' return variable names 'print' print verbose display additional information","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to return variable names — vars","text":"string","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to return variable names — vars","text":"","code":"vars(paste0(system.file(\"extdata\",package=\"eva3dm\"),'/wrfinput_d01')) #> [1] \"Times\" \"XLAT\"  \"XLONG\""},{"path":"https://schuch666.github.io/eva3dm/reference/wrf_rast.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates SpatRaster object from wrf file — wrf_rast","title":"Creates SpatRaster object from wrf file — wrf_rast","text":"Creates SpatRaster (terra R-package) object variable wrf file (another compatible NetCDF)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/wrf_rast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates SpatRaster object from wrf file — wrf_rast","text":"","code":"wrf_rast(   file = file.choose(),   name = NA,   map,   level = 1,   times,   latlon = FALSE,   method = \"bilinear\",   as_polygons = FALSE,   flip_h = FALSE,   flip_v = FALSE,   verbose = FALSE,   ... )"},{"path":"https://schuch666.github.io/eva3dm/reference/wrf_rast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates SpatRaster object from wrf file — wrf_rast","text":"file wrf file name variable name map (optional) file lat-lon variables grid information level 4d data, numeric, default 1 surface (include times) times 4d data, numeric, set select time instead levels (include levels) latlon logical (default FALSE), set TRUE project output \"+proj=longlat +datum=WGS84 +no_defs\" method method passed terra::projection, default bilinear as_polygons logical, true return SpatVector instead SpatRaster flip_h horizontal flip (rows) flip_v vertical flip (cols) verbose display additional information ... extra arguments passed ncdf4::ncvar_get","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/wrf_rast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates SpatRaster object from wrf file — wrf_rast","text":"SpatRaster object (terra package)","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/wrf_rast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates SpatRaster object from wrf file — wrf_rast","text":"","code":"{  wrf <- paste(system.file(\"extdata\", package = \"eva3dm\"),                          \"/wrfinput_d01\", sep=\"\")  r <- wrf_rast(file=wrf, name='XLAT')  plot_rast(r) }"},{"path":"https://schuch666.github.io/eva3dm/reference/write_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions to write stats and evaluation — write_stat","title":"Functions to write stats and evaluation — write_stat","text":"Functions write output evaluation functions. file name ends .csv function write.csv used otherwise function write.table used.","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/write_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions to write stats and evaluation — write_stat","text":"","code":"write_stat(stat, file, sep = \";\", dec = \".\", verbose = FALSE, ...)"},{"path":"https://schuch666.github.io/eva3dm/reference/write_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions to write stats and evaluation — write_stat","text":"stat observed data.frame file model data.frame sep field separator string, passed write.table function dec string use decimal points, passed write.table function verbose display additional information ... arguments passed write.table write.csv functions","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/write_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions to write stats and evaluation — write_stat","text":"return value","code":""},{"path":"https://schuch666.github.io/eva3dm/reference/write_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions to write stats and evaluation — write_stat","text":"","code":"sample <- read_stat(paste0(system.file(\"extdata\", package = \"eva3dm\"),\"/sample.csv\"),                     verbose = TRUE) #> reading /home/runner/work/_temp/Library/eva3dm/extdata/sample.csv  dir.create(file.path(tempdir(), \"stats\"))  write_stat(file    = paste0(file.path(tempdir(), \"stats\"),'/sample.txt'),            stat    = sample,            verbose = TRUE) #> writing /tmp/RtmpfxF4nR/stats/sample.txt   write_stat(file    = paste0(file.path(tempdir(), \"stats\"),'/sample.csv'),            stat    = sample,            verbose = TRUE) #> writing /tmp/RtmpfxF4nR/stats/sample.csv"},{"path":"https://schuch666.github.io/eva3dm/news/index.html","id":"eva3dm-099","dir":"Changelog","previous_headings":"","what":"eva3dm 0.99","title":"eva3dm 0.99","text":"CRAN release: 2024-11-21 package CRAN","code":""},{"path":"https://schuch666.github.io/eva3dm/news/index.html","id":"eva3dm-070","dir":"Changelog","previous_headings":"","what":"eva3dm 0.7.0","title":"eva3dm 0.7.0","text":"github actions installation check (linux-relese, linux-dev, linux-old1, win-release, win-old1, iso-relese) Cod-cov integration","code":""},{"path":"https://schuch666.github.io/eva3dm/news/index.html","id":"eva3dm-060","dir":"Changelog","previous_headings":"","what":"eva3dm 0.6.0","title":"eva3dm 0.6.0","text":"wrf_rast fixed biogenic emissions files %% syntax added","code":""},{"path":"https://schuch666.github.io/eva3dm/news/index.html","id":"eva3dm-056-release-date-29-april-2024","dir":"Changelog","previous_headings":"","what":"eva3dm 0.5.6 (Release date: 29 April 2024)","title":"eva3dm 0.5.6 (Release date: 29 April 2024)","text":"Website documentation update %% syntax implemented","code":""},{"path":"https://schuch666.github.io/eva3dm/news/index.html","id":"eva3dm-050","dir":"Changelog","previous_headings":"","what":"eva3dm 0.5.0","title":"eva3dm 0.5.0","text":"eval() sat() functional stat() cate() package covers pre-processing final evaluation","code":""},{"path":"https://schuch666.github.io/eva3dm/news/index.html","id":"eva3dm-040","dir":"Changelog","previous_headings":"","what":"eva3dm 0.4.0","title":"eva3dm 0.4.0","text":"Functions NetCDF functions imported hackWRF Function cate() function implemented categorical evaluation","code":""},{"path":"https://schuch666.github.io/eva3dm/news/index.html","id":"eva3dm-030","dir":"Changelog","previous_headings":"","what":"eva3dm 0.3.0","title":"eva3dm 0.3.0","text":"visualization functions","code":""},{"path":"https://schuch666.github.io/eva3dm/news/index.html","id":"eva3dm-020","dir":"Changelog","previous_headings":"","what":"eva3dm 0.2.0","title":"eva3dm 0.2.0","text":"Functions pre-process observations model","code":""},{"path":"https://schuch666.github.io/eva3dm/news/index.html","id":"eva3dm-010","dir":"Changelog","previous_headings":"","what":"eva3dm 0.1.0","title":"eva3dm 0.1.0","text":"Prototype supporting satellite evaluation added wrf_rast plot_rast","code":""}]
